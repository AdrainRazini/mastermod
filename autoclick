-- üîí Requer executor externo (Synapse, KRNL, Hydrogen)
local VirtualInputManager = game:GetService("VirtualInputManager")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer

-- Interface principal
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "AutoClickerMobileGUI"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = player:WaitForChild("PlayerGui")

-- Janela
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 240, 0, 150)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)

-- Label tipo de dispositivo
local tipoLabel = Instance.new("TextLabel", frame)
tipoLabel.Size = UDim2.new(1, -20, 0, 30)
tipoLabel.Position = UDim2.new(0, 10, 0, 10)
tipoLabel.TextColor3 = Color3.new(1, 1, 1)
tipoLabel.BackgroundTransparency = 1
tipoLabel.Font = Enum.Font.GothamBold
tipoLabel.TextSize = 16

-- Bot√£o de ativar
local toggleBtn = Instance.new("TextButton", frame)
toggleBtn.Size = UDim2.new(1, -20, 0, 40)
toggleBtn.Position = UDim2.new(0, 10, 0, 50)
toggleBtn.Text = "Ativar Click"
toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 18

-- PosLabel
local posLabel = Instance.new("TextLabel", frame)
posLabel.Size = UDim2.new(1, -20, 0, 30)
posLabel.Position = UDim2.new(0, 10, 0, 100)
posLabel.Text = "Posi√ß√£o: -"
posLabel.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
posLabel.TextColor3 = Color3.new(1, 1, 1)
posLabel.Font = Enum.Font.GothamBold
posLabel.TextSize = 14

-- üîç Detecta dispositivo
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
tipoLabel.Text = isMobile and "üì± Dispositivo: CELULAR" or "üíª Dispositivo: PC"

-- üîò Vari√°veis
local clickPos = nil
local active = false

-- ‚úÖ Bolinha para Mobile
local bola = nil
if isMobile then
	bola = Instance.new("Frame", gui)
	bola.Size = UDim2.new(0, 40, 0, 40)
	bola.Position = UDim2.new(0.5, -20, 0.5, -20)
	bola.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
	bola.BackgroundTransparency = 0.2
	bola.BorderSizePixel = 0
	bola.ZIndex = 10

	local corner = Instance.new("UICorner", bola)
	corner.CornerRadius = UDim.new(1, 0)

	local dragging = false
	local offset = Vector2.new()

	bola.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			offset = input.Position - bola.Position
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.Touch then
			local pos = input.Position - offset
			bola.Position = UDim2.new(0, pos.X, 0, pos.Y)
			clickPos = Vector2.new(pos.X + bola.AbsoluteSize.X/2, pos.Y + bola.AbsoluteSize.Y/2)
			posLabel.Text = "Toque: " .. math.floor(clickPos.X) .. ", " .. math.floor(clickPos.Y)
		end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch then
			dragging = false
		end
	end)
else
	-- PC: clique na tela para selecionar posi√ß√£o
	UserInputService.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			clickPos = UserInputService:GetMouseLocation()
			posLabel.Text = "Clique: " .. clickPos.X .. ", " .. clickPos.Y
		end
	end)
end

-- üîÅ Clique Autom√°tico
RunService.RenderStepped:Connect(function()
	if active and clickPos then
		if isMobile then
			VirtualInputManager:SendTouchEvent(Enum.UserInputType.Touch, clickPos.X, clickPos.Y, true, game)
			wait(0.05)
			VirtualInputManager:SendTouchEvent(Enum.UserInputType.Touch, clickPos.X, clickPos.Y, false, game)
		else
			VirtualInputManager:SendMouseButtonEvent(clickPos.X, clickPos.Y, 0, true, game, 1)
			wait(0.05)
			VirtualInputManager:SendMouseButtonEvent(clickPos.X, clickPos.Y, 0, false, game, 1)
		end
	end
end)

-- üü¢ Ativar/Desativar
toggleBtn.MouseButton1Click:Connect(function()
	active = not active
	toggleBtn.Text = active and "Desativar Click" or "Ativar Click"
	toggleBtn.BackgroundColor3 = active and Color3.fromRGB(170, 0, 0) or Color3.fromRGB(0, 170, 0)
end)
