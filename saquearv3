-- 🔧 Serviços
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local character = plr.Character or plr.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

-- 🎯 Configurações Iniciais
local pontoArena = Vector3.new(-394.9, 54.0, -741.6)
local pastaNpcs = workspace:WaitForChild("EnemyFolder")

local config = {
	distanciaMinima = 10,
	distanciaMaxima = 50,
	contador = false,
	highlightNPC = false,
	modoInteligente = false,
}

-- 🧠 Estados
local autoFarmAtivo = false
local partidaAtiva = false

-- 🖼️ Função utilitária para criar UI Corner
local function applyCorner(instance, radius)
	local corner = Instance.new("UICorner")
	corner.CornerRadius = radius or UDim.new(0, 6)
	corner.Parent = instance
end

-- 🧱 GUI Principal
local gui = Instance.new("ScreenGui")
gui.Name = "AutoFarmGui"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = plr:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Name = "MainFrame"
frame.Size = UDim2.new(0, 200, 0, 70)
frame.Position = UDim2.new(0, 20, 0, 80)
frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = gui
applyCorner(frame, UDim.new(0, 8))

-- 🌫️ Sombra
local shadow = Instance.new("ImageLabel")
shadow.Name = "Shadow"
shadow.Size = UDim2.new(1, 12, 1, 12)
shadow.Position = UDim2.new(0, -6, 0, -6)
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://1316045217"
shadow.ImageTransparency = 0.5
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10, 10, 118, 118)
shadow.ZIndex = 0
shadow.Parent = frame

-- 🟢 Botão principal (Ativar)
local button = Instance.new("TextButton")
button.Size = UDim2.new(1, -30, 1, 0)
button.Position = UDim2.new(0, 0, 0, 0)
button.BackgroundColor3 = Color3.fromRGB(65, 65, 65)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.TextSize = 18
button.Font = Enum.Font.GothamBold
button.Text = "Ativar AutoFarm"
button.Parent = frame
applyCorner(button)

-- 🔘 Minimizar / Restaurar
local minimizarBtn = Instance.new("TextButton")
minimizarBtn.Size = UDim2.new(0, 30, 0, 30)
minimizarBtn.Position = UDim2.new(1, -30, 0, 0)
minimizarBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
minimizarBtn.Text = "-"
minimizarBtn.TextColor3 = Color3.new(1,1,1)
minimizarBtn.TextSize = 22
minimizarBtn.Font = Enum.Font.GothamBold
minimizarBtn.Parent = frame
applyCorner(minimizarBtn)

local restaurarBtn = minimizarBtn:Clone()
restaurarBtn.Text = "+"
restaurarBtn.Size = UDim2.new(0, 40, 0, 40)
restaurarBtn.Position = UDim2.new(0, 20, 0, 80)
restaurarBtn.Visible = false
restaurarBtn.Parent = gui

-- 🔴 Bolinha de status
local statusBall = Instance.new("Frame")
statusBall.Name = "StatusIndicator"
statusBall.Size = UDim2.new(0, 16, 0, 16)
statusBall.Position = UDim2.new(0, -8, 0, -8)
statusBall.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
statusBall.BorderSizePixel = 0
statusBall.Parent = frame
applyCorner(statusBall, UDim.new(1, 0))

-- 🏷️ Status textual
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, 0, 0, 25)
statusLabel.Position = UDim2.new(0, 0, 0, frame.Size.Y.Offset)
statusLabel.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
statusLabel.TextColor3 = Color3.new(1, 1, 1)
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 14
statusLabel.Text = "Status: Aguardando ação..."
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.Parent = gui
applyCorner(statusLabel)

-- 🔁 Atualizador de status visual/textual
local function atualizarStatus(cor)
	statusBall.BackgroundColor3 = cor
end
local function atualizarStatusComTexto(cor, texto)
	atualizarStatus(cor)
	statusLabel.Text = "Status: " .. texto
end

-- 📦 Configurações
local configBtn = Instance.new("TextButton")
configBtn.Size = UDim2.new(0, 30, 0, 30)
configBtn.Position = UDim2.new(1, -30, 1, -30)
configBtn.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
configBtn.Text = "⚙️"
configBtn.TextColor3 = Color3.new(1,1,1)
configBtn.Font = Enum.Font.GothamBold
configBtn.TextSize = 20
configBtn.Parent = frame
applyCorner(configBtn)

-- ⚙️ Painel de Config
local configFrame = Instance.new("Frame")
configFrame.Size = UDim2.new(0, 240, 0, 400)
configFrame.Position = UDim2.new(0, frame.Position.X.Offset + 220, 0, frame.Position.Y.Offset)
configFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
configFrame.Visible = false
configFrame.Active = true
configFrame.Draggable = true
configFrame.Parent = gui
applyCorner(configFrame, UDim.new(0, 8))

local configTitle = Instance.new("TextLabel")
configTitle.Size = UDim2.new(1, 0, 0, 30)
configTitle.BackgroundTransparency = 1
configTitle.Text = "🔧 Configurações"
configTitle.TextColor3 = Color3.new(1, 1, 1)
configTitle.Font = Enum.Font.GothamBold
configTitle.TextSize = 18
configTitle.Parent = configFrame

-- 🔢 Entradas de distância
local function criarEntrada(titulo, posY, valorAtual, onChange)
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(0, 120, 0, 20)
	label.Position = UDim2.new(0, 10, 0, posY)
	label.Text = titulo
	label.TextColor3 = Color3.new(1,1,1)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = configFrame

	local box = Instance.new("TextBox")
	box.Size = UDim2.new(0, 70, 0, 20)
	box.Position = UDim2.new(1, -80, 0, posY)
	box.Text = tostring(valorAtual)
	box.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	box.TextColor3 = Color3.new(1, 1, 1)
	box.Font = Enum.Font.Gotham
	box.TextSize = 14
	box.ClearTextOnFocus = false
	box.Parent = configFrame
	applyCorner(box)

	box.FocusLost:Connect(function()
		local value = tonumber(box.Text)
		if value then onChange(value) end
	end)
end

criarEntrada("Distância Mínima:", 40, config.distanciaMinima, function(v) config.distanciaMinima = v end)
criarEntrada("Distância Máxima:", 70, config.distanciaMaxima, function(v) config.distanciaMaxima = v end)

-- ✅ Checkbox
local function criarCheckbox(titulo, posY, valorInicial, callback)
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(0, 140, 0, 20)
	label.Position = UDim2.new(0, 10, 0, posY)
	label.Text = titulo
	label.TextColor3 = Color3.new(1, 1, 1)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = configFrame

	local box = Instance.new("TextButton")
	box.Size = UDim2.new(0, 20, 0, 20)
	box.Position = UDim2.new(1, -30, 0, posY)
	box.BackgroundColor3 = valorInicial and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(70, 70, 70)
	box.Text = valorInicial and "✔" or ""
	box.TextColor3 = Color3.new(1, 1, 1)
	box.Font = Enum.Font.GothamBold
	box.TextSize = 16
	box.Parent = configFrame
	applyCorner(box, UDim.new(0, 4))

	box.MouseButton1Click:Connect(function()
		valorInicial = not valorInicial
		box.BackgroundColor3 = valorInicial and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(70, 70, 70)
		box.Text = valorInicial and "✔" or ""
		callback(valorInicial)
	end)
end

criarCheckbox("Contador", 100, config.contador, function(v) config.contador = v end)
criarCheckbox("Highlight NPC", 130, config.highlightNPC, function(v) config.highlightNPC = v end)
criarCheckbox("Modo Inteligente", 160, config.modoInteligente, function(v) config.modoInteligente = v end)

-- Botão de fechar configurações
local fecharConfigBtn = Instance.new("TextButton")
fecharConfigBtn.Size = UDim2.new(0, 60, 0, 25)
fecharConfigBtn.Position = UDim2.new(1, -70, 1, -35)
fecharConfigBtn.BackgroundColor3 = Color3.fromRGB(100, 30, 30)
fecharConfigBtn.Text = "Fechar"
fecharConfigBtn.TextColor3 = Color3.new(1, 1, 1)
fecharConfigBtn.Font = Enum.Font.GothamBold
fecharConfigBtn.TextSize = 14
fecharConfigBtn.Parent = configFrame
applyCorner(fecharConfigBtn)

-- 📌 Eventos dos botões
minimizarBtn.MouseButton1Click:Connect(function()
	frame.Visible = false
	restaurarBtn.Visible = true
end)

restaurarBtn.MouseButton1Click:Connect(function()
	frame.Visible = true
	restaurarBtn.Visible = false
end)

configBtn.MouseButton1Click:Connect(function()
	configFrame.Visible = true
end)

fecharConfigBtn.MouseButton1Click:Connect(function()
	configFrame.Visible = false
end)




local function teleportarParaArena()
	hrp.CFrame = CFrame.new(pontoArena + Vector3.new(0, 3, 0))
end

local function teleportarParaSpawn()
	local spawnLocation = plr.RespawnLocation or workspace:FindFirstChild("SpawnLocation")
	if spawnLocation then
		hrp.CFrame = spawnLocation.CFrame + Vector3.new(0, 3, 0)
	else
		warn("⚠️ Spawn não encontrado")
	end
end

-- Reforço para busca de npcs mais longes

local function reforco()
	local rangeExtra = config.distanciaMaxima * 2
	local menorDist = math.huge
	local alvo = nil

	for _, npc in pairs(pastaNpcs:GetChildren()) do
		if npc:IsA("Model")
			and npc:FindFirstChild("Humanoid")
			and npc:FindFirstChild("HumanoidRootPart")
			and npc.Humanoid.Health > 0 then

			local dist = (hrp.Position - npc.HumanoidRootPart.Position).Magnitude
			if dist > config.distanciaMaxima and dist <= rangeExtra then
				if dist < menorDist then
					menorDist = dist
					alvo = npc
				end
			end
		end
	end

	if alvo then
		print("🆘 Reforço: NPC distante encontrado:", alvo.Name)
		atualizarStatusComTexto(Color3.fromRGB(0, 200, 255), "Reforço: " .. alvo.Name)
		moverAteNpc(alvo)
		return alvo
	else
		print("❌ Reforço falhou: nenhum NPC distante.")
		return nil
	end
end



-- 🎯 Busca NPC melhorada
local function getNpcMaisProximo()
	local menorDist = math.huge
	local alvo, total = nil, 0

	-- Limpar highlights antigos
	for _, npc in pairs(pastaNpcs:GetChildren()) do
		local highlight = npc:FindFirstChild("AutoFarmHighlight")
		if highlight then highlight:Destroy() end
	end

	for _, npc in pairs(pastaNpcs:GetChildren()) do
		if npc:IsA("Model")
			and npc:FindFirstChild("HumanoidRootPart")
			and npc:FindFirstChild("Humanoid")
			and npc.Humanoid.Health > 0 then

			local dist = (hrp.Position - npc.HumanoidRootPart.Position).Magnitude
			if dist >= config.distanciaMinima and dist <= config.distanciaMaxima then
				total += 1
				if dist < menorDist then
					menorDist = dist
					alvo = npc
				end
			end
		end
	end

	if config.contador then
		print("👥 NPCs encontrados:", total)
	end

	-- Highlight se ativado
	if config.highlightNPC and alvo then
		local hl = Instance.new("Highlight")
		hl.Name = "AutoFarmHighlight"
		hl.Adornee = alvo
		hl.FillColor = Color3.fromRGB(0, 255, 0)
		hl.OutlineColor = Color3.new(1, 1, 1)
		hl.Parent = alvo
	end

	return alvo
end


-- 🚶 Mover até NPC com retry e timeout
local function moverAteNpc(npc)
	if not (npc and npc:FindFirstChild("HumanoidRootPart")) then return end

	local alvoPos = npc.HumanoidRootPart.Position
	local tempoMaximo, tempoAtual = 10, 0
	local distanciaChegada, dt = 3, 0.1

	humanoid:MoveTo(alvoPos)

	while tempoAtual < tempoMaximo do
		task.wait(dt)
		tempoAtual += dt

		if not npc or not npc:FindFirstChild("HumanoidRootPart") or npc.Humanoid.Health <= 0 then
			print("⚠️ NPC sumiu ou morreu durante movimentação.")
			break
		end

		local novaPos = npc.HumanoidRootPart.Position
		local distanciaAtual = (hrp.Position - novaPos).Magnitude

		if distanciaAtual <= distanciaChegada then
			break
		elseif (novaPos - alvoPos).Magnitude > 1 then
			alvoPos = novaPos
			humanoid:MoveTo(alvoPos)
		end
	end

	humanoid:MoveTo(hrp.Position) -- Para o movimento
end


-- 🧠 Lógica principal da arena

-- Lógica principal da arena melhorada
local function iniciarArena()
	partidaAtiva = true
	local alvoAtual = nil
	local tempoSemNpc = 0

	print("🎯 Indo para a arena...")
	atualizarStatusComTexto(Color3.fromRGB(255, 255, 0), "Indo para a arena...")
	teleportarParaArena()

	print("⌛ Esperando 3s para iniciar...")
	atualizarStatusComTexto(Color3.fromRGB(255, 255, 0), "Esperando 3 segundos para iniciar...")
	task.wait(3)

	while autoFarmAtivo do
		-- Verifica se o alvo atual ainda é válido
		local valido = alvoAtual
			and alvoAtual:FindFirstChild("Humanoid")
			and alvoAtual:FindFirstChild("HumanoidRootPart")
			and alvoAtual.Humanoid.Health > 0

		if not valido then
			alvoAtual = getNpcMaisProximo()
		end

		if alvoAtual then
			tempoSemNpc = 0
			atualizarStatusComTexto(Color3.fromRGB(0, 255, 0), "Seguindo: " .. alvoAtual.Name)
			moverAteNpc(alvoAtual)
		else
			tempoSemNpc += 1
			atualizarStatusComTexto(Color3.fromRGB(255, 255, 0), "Esperando NPC...")

			-- Reforço após 10 tentativas
			if tempoSemNpc >= 10 then
				if reforco then
					local npcRef = reforco()
					if npcRef then
						alvoAtual = npcRef
						tempoSemNpc = 0
					else
						if modoInteligente then
							print("🤖 Nenhum NPC, ativando modo inteligente.")
							atualizarStatusComTexto(Color3.fromRGB(255, 165, 0), "Sem NPCs. Teleportando para spawn...")
							teleportarParaSpawn()
							task.wait(2)

							atualizarStatusComTexto(Color3.fromRGB(255, 165, 0), "Voltando para arena...")
							teleportarParaArena()
							task.wait(2)

							tempoSemNpc = 0
						else
							print("❌ Sem NPCs, encerrando arena.")
							break
						end
					end
				end
			end

			task.wait(1)
		end

		task.wait(0.5)
	end

	print("🏁 Arena finalizada, voltando ao spawn.")
	atualizarStatusComTexto(Color3.fromRGB(255, 255, 0), "Arena finalizada, voltando ao spawn...")
	teleportarParaSpawn()

	print("⏳ Aguardando 10s...")
	atualizarStatusComTexto(Color3.fromRGB(255, 255, 0), "Aguardando 10 segundos...")
	task.wait(10)

	partidaAtiva = false

	if autoFarmAtivo then
		iniciarArena()
	end
end





-- ▶️ Início do sistema
local function iniciarSistema()
	task.spawn(function()
		if not autoFarmAtivo then return end
		iniciarArena()
	end)
end


-- ⬅️ Botão ativar/desativar
button.MouseButton1Click:Connect(function()
	autoFarmAtivo = not autoFarmAtivo

	if autoFarmAtivo then
		button.Text = "Desativar AutoFarm"
		atualizarStatus(Color3.fromRGB(255, 255, 0)) -- 🟡
		iniciarSistema()
	else
		button.Text = "Ativar AutoFarm"
		atualizarStatus(Color3.fromRGB(255, 0, 0)) -- 🔴
		partidaAtiva = false
		humanoid:MoveTo(hrp.Position)
	end
end)

-- 🔁 Função para monitorar morte e reinicializar variáveis após respawn
local function monitorarMorte()
	-- Conexão segura
	if humanoid and humanoid:IsA("Humanoid") then
		humanoid.Died:Connect(function()
			print("💀 Jogador morreu.")
			atualizarStatusComTexto(Color3.fromRGB(255, 0, 0), "Morto. Aguardando respawn...")

			-- Pausar farm e lógica
			partidaAtiva = false

			-- Espera personagem novo e reinicializa variáveis essenciais
			plr.CharacterAdded:Wait()
			character = plr.Character or plr.CharacterAdded:Wait()
			humanoid = character:WaitForChild("Humanoid")
			hrp = character:WaitForChild("HumanoidRootPart")

			-- Garantir que outras variáveis continuam corretas
			-- Config já é tabela compartilhada, permanece intacta
			-- Reconectar monitor da morte
			monitorarMorte()

			-- Se autofarm ainda está ativo, continua
			if autoFarmAtivo then
				print("⚡ AutoFarm reiniciando após morte.")
				atualizarStatusComTexto(Color3.fromRGB(255, 255, 0), "Respawn detectado. Retornando à arena...")
				task.wait(2)

				if not partidaAtiva then
					iniciarArena()
				end
			else
				atualizarStatusComTexto(Color3.fromRGB(255, 0, 0), "AutoFarm desativado. Aguardando ação.")
			end
		end)
	end
end

-- 🔄 Chamar logo após inicializar humanoid na primeira vez
monitorarMorte()
