-- URL da API do GitHub para listar os scripts
local GITHUB_USER = "AdrainRazini"
local GITHUB_REPO = "Mastermod"
local GITHUB_REPO_NAME = "Mastermod"
local Owner = "Adrian75556435"
local SCRIPTS_FOLDER_URL = "https://api.github.com/repos/" .. GITHUB_USER .. "/" .. GITHUB_REPO .. "/contents/script"
local IMG_ICON = "rbxassetid://117585506735209"
local NAME_MOD_MENU = "Mastermod (Pro)"

local VIM = game:GetService("VirtualInputManager")
local UIS = game:GetService("UserInputService")

local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")


local player = Players.LocalPlayer




--===============================================--
--=================== Module ====================--
--===============================================--

local Module

-- 1. Tenta carregar pelo GitHub (s√≥ funciona em executor com HttpGet habilitado)
pcall(function()
	Module = loadstring(game:HttpGet("https://raw.githubusercontent.com/".. GITHUB_USER .."/".. GITHUB_REPO .."/refs/heads/main/module/data.lua"))()
end)

-- 2. Se n√£o conseguiu, tenta pelo require Roblox
if not Module then
	warn("Falha ao carregar via GitHub, tentando require Roblox...")
	pcall(function()
		Module = require(83723667417989)
	end)
end

-- 3. Se ainda n√£o conseguiu, cria um fallback vazio
if not Module then
	warn("Falha ao carregar m√≥dulo (nem GitHub nem Roblox). Usando fallback.")
	Module = {
		Loaded = false,
		Message = "M√≥dulo n√£o encontrado, rodando em modo seguro."
	}
end

-- Debug do m√≥dulo
print("üîπ M√≥dulo carregado:", Module)


--===============================================--
--===============================================--

--===============================================--
--==================== DATA =====================--
--===============================================--


-- Estruturas principais GUI
local G1L, G2L, G3L, G4L, G5L = {}, {}, {}, {}, {}

-- M√≥dulos/categorias
local Farmes, Player, Lights, Games = {}, {}, {}, {}
local List_Mods = {"Mastermods", "Player", "Load", "Games"}


local icons = {
	fa_bx_mastermods = "rbxassetid://102637810511338", -- Logo do meu mod
	fa_rr_toggle_left = "rbxassetid://118353432570896", -- Off
	fa_rr_toggle_right = "rbxassetid://136961682267523", -- On
	fa_rr_information = "rbxassetid://99073088081563", -- Info
	fa_bx_code_start = "rbxassetid://107895739450188", -- <>
	fa_bx_code_end = "rbxassetid://106185292775972", -- </>
	fa_bx_config = "rbxassetid://95026906912083", -- ‚óè
	fa_bx_loader = "rbxassetid://123191542300310", -- loading
}


--===============================================--
--============= Lista De Cores dat ===============--
--===============================================--

-- Cria√ß√£o da lista de cores 
local colors = {
	Main = Color3.fromRGB(20, 20, 20),
	Secondary = Color3.fromRGB(35, 35, 35),
	Accent = Color3.fromRGB(0, 170, 255),
	Text = Color3.fromRGB(255, 255, 255),
	Button = Color3.fromRGB(50, 50, 50),
	ButtonHover = Color3.fromRGB(70, 70, 70),
	Stroke = Color3.fromRGB(80, 80, 80),
	Red = Color3.fromRGB(255, 0, 0),
	Green = Color3.fromRGB(0, 255, 0),
	Blue = Color3.fromRGB(0, 0, 255),
	Yellow = Color3.fromRGB(255, 255, 0),
	Orange = Color3.fromRGB(255, 165, 0),
	Purple = Color3.fromRGB(128, 0, 128),
	Pink = Color3.fromRGB(255, 105, 180),
	White = Color3.fromRGB(255, 255, 255),
	Black = Color3.fromRGB(0, 0, 0),
	Gray = Color3.fromRGB(128, 128, 128),
	DarkGray = Color3.fromRGB(50, 50, 50),
	LightGray = Color3.fromRGB(200, 200, 200),
	Cyan = Color3.fromRGB(0, 255, 255),
	Magenta = Color3.fromRGB(255, 0, 255),
	Brown = Color3.fromRGB(139, 69, 19),
	Gold = Color3.fromRGB(255, 215, 0),
	Silver = Color3.fromRGB(192, 192, 192),
	Maroon = Color3.fromRGB(128, 0, 0),
	Navy = Color3.fromRGB(0, 0, 128),
	Lime = Color3.fromRGB(50, 205, 50),
	Olive = Color3.fromRGB(128, 128, 0),
	Teal = Color3.fromRGB(0, 128, 128),
	Aqua = Color3.fromRGB(0, 255, 170),
	Coral = Color3.fromRGB(255, 127, 80),
	Crimson = Color3.fromRGB(220, 20, 60),
	Indigo = Color3.fromRGB(75, 0, 130),
	Turquoise = Color3.fromRGB(64, 224, 208),
	Slate = Color3.fromRGB(112, 128, 144),
	Chocolate = Color3.fromRGB(210, 105, 30)
}

--===============================================--
--===============================================--


--================ Notifica√ß√£o ====================--
--=================================================--


local StarterGui = game:GetService("StarterGui")

function Notification(icon,Title, text, tempo)
	-- Garante que s√≥ n√∫meros do assetid ser√£o usados
	local cleanIcon = tostring(icon):gsub("%D", "") -- remove tudo que n√£o for n√∫mero

	StarterGui:SetCore("SendNotification", { 
		Title = Title or GITHUB_REPO;
		Text = text or "";
		Icon = "rbxthumb://type=Asset&id="..cleanIcon.."&w=150&h=150";
		Duration = tempo or 5;
	})
end



--===============================================--
--===============================================--


--===============================================--
--================ Seguran√ßa ====================--
--===============================================--

-- Verificar se j√° existe um ScreenGui com o nome "ModMenu"
local existingScreenGui = game.Players.LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild(NAME_MOD_MENU)

-- Se j√° existir, retorna para evitar a cria√ß√£o do GUI
if existingScreenGui then
	return Notification(icons.fa_bx_config, NAME_MOD_MENU, "Neutralized Code", 5)
end

--===============================================--
--===============================================--


Notification(icons.fa_bx_mastermods, nil, Owner, 15)




--=================================================--
--========= Extra√ß√£o de NPCs Ou Jogadores =========--
--=================================================--
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local Characters = Workspace
-- Listas globais
local All_List = {}
local Players_List = {}
local Npcs_List = {}

-- Fun√ß√£o para limpar listas
local function clearLists()
	All_List = {}
	Players_List = {}
	Npcs_List = {}
end


--===============================================--
-- Fun√ß√£o recursiva para procurar todos NPCs ou jogadores
--===============================================--
local function scanWorkspace(parent)
	for _, child in ipairs(parent:GetChildren()) do
		if child:IsA("Model") then
			local humanoid = child:FindFirstChildOfClass("Humanoid")
			if humanoid then
				-- Adiciona na lista geral
				table.insert(All_List, child)

				-- Se for jogador
				if Players:GetPlayerFromCharacter(child) then
					table.insert(Players_List, child)
				else
					-- Sen√£o, considera NPC
					table.insert(Npcs_List, child)
				end
			end
		end

		-- Continua nos filhos (subpastas, models, etc)
		scanWorkspace(child)
	end
end

-- Inicia a varredura
scanWorkspace(Workspace)

-- Exemplo de impress√£o
print("=== Todos encontrados ===")
for _, model in ipairs(All_List) do
	print(model.Name)
end

print("=== Jogadores encontrados ===")
for _, plr in ipairs(Players_List) do
	print(plr.Name)
end

print("=== NPCs encontrados ===")
for _, npc in ipairs(Npcs_List) do
	print(npc.Name)
end

--===============================================--
--============= Fun√ß√£o De Estilos ===============--
--===============================================--

local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- üñºÔ∏è Fun√ß√£o utilit√°ria para criar UI Corner Obs: Aplicar Ui nas frames
local function applyCorner(instance, radius)
	local corner = Instance.new("UICorner")
	corner.CornerRadius = radius or UDim.new(0, 6)
	corner.Parent = instance
end

-- Fun√ß√£o para aplicar contorno neon via UIStroke
local function applyUIStroke(instance, colorName, thickness)
	thickness = thickness or 2
	local stroke = Instance.new("UIStroke")
	stroke.Parent = instance
	stroke.Thickness = thickness
	stroke.LineJoinMode = Enum.LineJoinMode.Round
	stroke.Transparency = 0
	-- Escolhe cor da paleta ou usa branco como fallback
	stroke.Color = colors[colorName] or Color3.new(1, 1, 1)
end

local function applyUIListLayout(instance, padding, sortOrder, alignment)
	local list = Instance.new("UIListLayout")
	list.Parent = instance

	-- Padding entre elementos (UDim ou padr√£o 0)
	list.Padding = padding or UDim.new(0, 0)

	-- Ordem dos elementos
	list.SortOrder = sortOrder or Enum.SortOrder.LayoutOrder 

	-- Alinhamento
	list.HorizontalAlignment = alignment or Enum.HorizontalAlignment.Center
end



local function applyRotatingGradientUIStroke(instance, cor1, cor2, cor3)
	cor1 = cor1 or "White"
	cor2 = cor2 or "White"
	cor3 = cor3 or "White"

	local stroke = Instance.new("UIStroke")
	stroke.Thickness = 2
	stroke.Transparency = 0
	stroke.LineJoinMode = Enum.LineJoinMode.Round
	stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	stroke.Color = colors.White
	stroke.Parent = instance

	local gradient = Instance.new("UIGradient")
	gradient.Rotation = 0
	gradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0.0, colors[cor1]),
		ColorSequenceKeypoint.new(0.5, colors[cor2]),
		ColorSequenceKeypoint.new(1.0, colors[cor3])
	})
	gradient.Parent = stroke

	-- Anima√ß√£o da rota√ß√£o do gradiente
	local angle = 0
	RunService.RenderStepped:Connect(function()
		if not gradient.Parent then return end
		angle = (angle + 0.5) % 360
		gradient.Rotation = angle
	end)
end

-- Fun√ß√£o para aplicar ajuste autom√°tico de CanvasSize em qualquer ScrollingFrame

local function applyAutoScrolling(instance, padding, alignment)
	-- Verifica se j√° existe um UIListLayout
	local layout = instance:FindFirstChildOfClass("UIListLayout")
	if not layout then
		layout = Instance.new("UIListLayout")
		layout.Parent = instance
		layout.SortOrder = Enum.SortOrder.LayoutOrder
	end

	-- Aplica padding se passado
	if padding then
		layout.Padding = padding
	end

	-- Aplica alinhamento opcional
	if alignment then
		layout.HorizontalAlignment = alignment or Enum.HorizontalAlignment.Left
	end

	-- Fun√ß√£o de atualiza√ß√£o
	local function updateCanvas()
		local contentSize = layout.AbsoluteContentSize
		local frameSizeY = instance.AbsoluteSize.Y

		instance.CanvasSize = UDim2.new(
			0, 0,
			0, math.max(contentSize.Y, frameSizeY) + 10 -- margem extra
		)
	end

	-- Conecta sinais
	layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateCanvas)
	instance:GetPropertyChangedSignal("AbsoluteSize"):Connect(updateCanvas)

	-- For√ßa atualiza√ß√£o inicial
	updateCanvas()

	return layout
end



function applyDraggable (instance, Active, Draggable)
	instance.Active = Active
	instance.Draggable = Draggable
end

--===============================================--
--===============================================--


--===============================================--
--=============== GUI principal =================-- 
--===============================================--

G1L["ScreenGui"] = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
G1L["ScreenGui"].Name = NAME_MOD_MENU

G1L["Container_Frame"] = Instance.new("Frame", G1L["ScreenGui"])
G1L["Container_Frame"].Size = UDim2.new(0.7, 0, 0.8, 0)
G1L["Container_Frame"].AnchorPoint = Vector2.new(0.5, 0.5)
G1L["Container_Frame"].Position = UDim2.new(0.5, 0, 0.5, 0)
G1L["Container_Frame"].BackgroundColor3 = colors.Main
G1L["Container_Frame"].BorderSizePixel = 0

applyDraggable(G1L["Container_Frame"], true, true)
applyCorner(G1L["Container_Frame"], UDim.new(0, 12)) -- Cantos arredondados
applyRotatingGradientUIStroke(G1L["Container_Frame"], "Purple", "Indigo", "Aqua") -- Gradiente animado


G1L["Top_Container"] = Instance.new("Frame", G1L["Container_Frame"])
G1L["Top_Container"].Size = UDim2.new(1, 0, 0, 25)
G1L["Top_Container"].Position = UDim2.new(0, 0, 0., 0)
G1L["Top_Container"].BackgroundColor3 = colors.DarkGray
G1L["Top_Container"].BorderSizePixel = 0


applyCorner(G1L["Top_Container"], UDim.new(0, 5))


G1L["Top_Title"] = Instance.new("TextLabel", G1L["Top_Container"])
G1L["Top_Title"].Size = UDim2.new(0, 100, 1, 0)
G1L["Top_Title"].Position = UDim2.new(0.05, 0, 0, 0)
G1L["Top_Title"].Text = NAME_MOD_MENU


G1L["Configurate"] = Instance.new("ImageButton", G1L["Top_Container"])
G1L["Configurate"].Size = UDim2.new(0, 25, 0, 25)
G1L["Configurate"].Position = UDim2.new(0.85, 0, 0, 0)
G1L["Configurate"].Image = icons.fa_bx_config

applyCorner(G1L["Configurate"], UDim.new(0, 5))
applyRotatingGradientUIStroke(G1L["Configurate"], "Purple", "Indigo", "Aqua") -- Gradiente animado

G1L["Minimize"] = Instance.new("TextButton", G1L["Top_Container"])
G1L["Minimize"].Size = UDim2.new(0, 25, 0, 25)
G1L["Minimize"].Text = "-"
G1L["Minimize"].Position = UDim2.new(0.9, 0, 0, 0)
G1L["Minimize"].BackgroundColor3 = colors.Red

applyCorner(G1L["Minimize"], UDim.new(0, 5))
applyRotatingGradientUIStroke(G1L["Minimize"], "Purple", "Indigo", "Aqua") -- Gradiente animado


G1L["DeleteGui"] = Instance.new("TextButton", G1L["Top_Container"])
G1L["DeleteGui"].Size = UDim2.new(0, 25, 0, 25)
G1L["DeleteGui"].Text = "X"
G1L["DeleteGui"].Position = UDim2.new(0.95, 0, 0, 0)
G1L["DeleteGui"].BackgroundColor3 = colors.Red

applyCorner(G1L["DeleteGui"], UDim.new(0, 5))
applyRotatingGradientUIStroke(G1L["DeleteGui"], "Red", "Orange", "Yellow") -- Gradiente animado


G1L["IconMod"] = Instance.new("ImageButton", G1L["ScreenGui"])
G1L["IconMod"].Size = UDim2.new(0, 25, 0, 25)
G1L["IconMod"].Position = UDim2.new(0, 0, 0, 0)
G1L["IconMod"].BackgroundColor3 = colors.Orange
G1L["IconMod"].Image = icons.fa_bx_mastermods
G1L["IconMod"].BorderSizePixel = 0
G1L["IconMod"].Visible = false

applyCorner(G1L["IconMod"], UDim.new(0, 50))
applyDraggable(G1L["IconMod"], true, true)
applyRotatingGradientUIStroke(G1L["IconMod"], "Red", "Orange", "Yellow") -- Gradiente animado


G1L["Left_Container"] = Instance.new("ScrollingFrame", G1L["Container_Frame"])
G1L["Left_Container"].Size = UDim2.new(0.3, 0, 0.8, 0)
G1L["Left_Container"].Position = UDim2.new(0, 0, 0.15, 0)
G1L["Left_Container"].BackgroundColor3 = colors.DarkGray
G1L["Left_Container"].BorderSizePixel = 0

applyAutoScrolling(G1L["Left_Container"], UDim.new(0, 5))


local List_Right_Container = {}

function Right_Container(name)
	local container = Instance.new("ScrollingFrame", G1L["Container_Frame"])
	container.Size = UDim2.new(0.7, 0, 0.8, 0)
	container.Position = UDim2.new(0.3, 0, 0.15, 0)
	container.BackgroundColor3 = colors.DarkGray
	container.BorderSizePixel = 0
	container.Visible = false
	container.Name = "Right_Container_"..name

	applyAutoScrolling(container, UDim.new(0, 5), Enum.HorizontalAlignment.Center)
	applyUIListLayout(container, UDim.new(0, 5))

	-- guarda refer√™ncia para acessar depois
	List_Right_Container[name] = container
	return container
end

-- cria todos os containers da lista
for _, name in ipairs(List_Mods) do
	Right_Container(name)
end

    Right_Container("Configurate")

function Title_Lb(Text, parent)
	-- Cria o TextLabel para o t√≠tulo
	local Label = Instance.new("TextLabel")
	Label.Parent = List_Right_Container[parent]
	Label.Text = Text
	Label.Size = UDim2.new(0.85, 0, 0, 30)
	Label.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Label.BorderSizePixel = 0
	Label.Font = Enum.Font.SourceSansBold
	Label.TextColor3 = Color3.fromRGB(255, 255, 255)
	Label.TextSize = 16
	Label.LayoutOrder = 1
	-- Aplica gradiente animado (se sua fun√ß√£o existir)
	applyRotatingGradientUIStroke(Label, "Red", "Orange", "Yellow")
end

-- Exemplo de uso direto
Title_Lb("MOD MENU CONFIG", "Configurate")

-- Agora percorre a lista
for _, Name in ipairs(List_Mods) do
	Title_Lb(Name, Name) -- passa o parent correto
end



local List_Frame_Mods_toggled = {}

function Frame_Mod_toggled(name, parent)
	-- Frame principal _ MODS
	local frame = Instance.new("ScrollingFrame", List_Right_Container[parent])
	frame.Size = UDim2.new(0.85, 0, 0, 200)
	frame.Position = UDim2.new(0, 0, 0, 0)
	frame.BackgroundColor3 = colors.Secondary
	frame.BorderSizePixel = 0
	frame.Visible = true
	frame.Name = "Frame_Mod_".. name
	frame.CanvasSize = UDim2.new(0, 0, 0, 0)

	-- Aplicar estilos
	applyAutoScrolling(frame, UDim.new(0, 5))
	applyUIListLayout(frame, UDim.new(0, 5))
	applyRotatingGradientUIStroke(frame, "Blue", "Purple", "Magenta")

	List_Frame_Mods_toggled[name] = frame
	return frame
end

Frame_Mod_toggled("Configurate", "Configurate")

Frame_Mod_toggled("Mastermods", "Mastermods")


Frame_Mod_toggled("Player", "Player")


local List_Frame_Mods = {}


function Frame_Mod_Scroll(name, parent)
	-- Frame rol√°vel para listar elementos
	local scroll = Instance.new("ScrollingFrame")
	scroll.Name = name .. "_Scroll"
	scroll.Size = UDim2.new(0.85, 0, 0, 300)
	scroll.Position = UDim2.new(0.05, 0, 0.1, 0)
	scroll.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	scroll.BorderSizePixel = 0
	scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
	scroll.ScrollBarThickness = 6
	scroll.Parent = List_Right_Container[parent]

	-- Layout para organizar os itens
	local layout = Instance.new("UIListLayout", scroll)
	layout.Padding = UDim.new(0, 5)
	layout.FillDirection = Enum.FillDirection.Vertical
	layout.SortOrder = Enum.SortOrder.LayoutOrder

	-- Ajusta o CanvasSize dinamicamente
	layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		scroll.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
	end)

	-- Salva na tabela para refer√™ncia futura
	List_Frame_Mods[name] = scroll

	return scroll
end

Frame_Mod_Scroll("Npc", "Mastermods")
Frame_Mod_Scroll("Load", "Load")

--==================================================--
--====================> Alert <=====================--
--==================================================--


local activeAlerts = {}

local function showAlertInMenu(menuGui, text, duration)
	if not menuGui then return end

	local alertFrame = Instance.new("Frame")
	alertFrame.Size = UDim2.new(0, 280, 0, 50)
	alertFrame.Position = UDim2.new(1, -300, 1, -60 - (#activeAlerts * 60))
	alertFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 80)
	alertFrame.BackgroundTransparency = 0
	alertFrame.BorderSizePixel = 0
	alertFrame.AnchorPoint = Vector2.new(0, 1)
	alertFrame.Name = "LocalAlert"
	alertFrame.ZIndex = 999
	alertFrame.Parent = menuGui

	Instance.new("UICorner", alertFrame).CornerRadius = UDim.new(0, 8)

	local label = Instance.new("TextLabel", alertFrame)
	label.Size = UDim2.new(1, -20, 1, -10)
	label.Position = UDim2.new(0, 10, 0, 5)
	label.BackgroundTransparency = 1
	label.Text = text
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Font = Enum.Font.Gotham
	label.TextSize = 16
	label.TextWrapped = true
	label.ZIndex = 1000

	table.insert(activeAlerts, alertFrame)

	task.delay(duration or 3, function()
		for i = 1, 10 do
			alertFrame.BackgroundTransparency += 0.05
			label.TextTransparency += 0.05
			task.wait(0.04)
		end
		alertFrame:Destroy()
		table.remove(activeAlerts, table.find(activeAlerts, alertFrame))
		for i, alert in ipairs(activeAlerts) do
			alert:TweenPosition(UDim2.new(1, -300, 1, -60 - ((i - 1) * 60)), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25, true)
		end
	end)
end

local function alert(msg, dur)
	showAlertInMenu(G1L["ScreenGui"], msg, dur or 4)
end

local function createButton(text, callback)
	local Button = Instance.new("TextButton")
	Button.Parent = List_Frame_Mods["Load"]
	Button.Size = UDim2.new(0.9, 0, 0, 40)
	Button.Text = text
	Button.BackgroundColor3 = Color3.fromRGB(60, 120, 255)
	Button.TextColor3 = Color3.new(1, 1, 1)
	Button.Font = Enum.Font.GothamBold
	Button.TextSize = 16
	Instance.new("UICorner", Button).CornerRadius = UDim.new(0, 8)

	Button.MouseButton1Click:Connect(function()
		alert("üì¶ Bot√£o '" .. text .. "' executado", 3)
		callback()
	end)

end

-- Carregar scripts do GitHub
local scripts = {
	{name = "Inventario", path = "inventario.lua"},
	{name = "99 Nights", path = "farme_nights.lua"},
	--{name = "Mause Click", path = "mause.lua"},
	--{name = "Mause Click 2", path = "Init.lua"},
	--{name = "Test Event Mause", path = "mov.lua"},
	{name = "Auto Click", path = "autoclick.lua"},
	{name = "AimBot PT", path = "aimbot.lua"},
	{name = "AimBot ES", path = "aimbot_es.lua"},
	{name = "Dash Player", path = "dash.lua"},
	{name = "Keyboard", path = "keyboard.lua"},
	{name = "FlyGui", path = "flygui.lua"},
	{name = "Tpcoordenadas", path = "tpcoordenadas.lua"},
	{name = "Teleport tool", path = "teleporttool.lua"},
	{name = "Teleport Players", path = "tpplayers.lua"},

}

for _, script in ipairs(scripts) do
	createButton(script.name:upper(), function()
		local success, response = pcall(function()
			return game:HttpGet("https://raw.githubusercontent.com/" .. GITHUB_USER .. "/" .. GITHUB_REPO .. "/main/script/" .. script.path)
		end)
		if success then
			alert("üß† Script '" .. script.name:upper() .. "' carregado!", 5)
			loadstring(response)()
		else
			alert("‚ùå Falha ao carregar '" .. script.name:upper() .. "'", 5)
		end
	end)
end



--==============================================================================--

--============= Controle de visibilidade =============--

G1L["Minimize"].MouseButton1Click:Connect(function()
	G1L["Container_Frame"].Visible = false
	G1L["IconMod"].Visible = true
end)

G1L["Configurate"].MouseButton1Click:Connect(function()
	
	local name = "Configurate"
	
	-- esconde todos os containers
	for _, cont in pairs(List_Right_Container) do
		cont.Visible = false
	end

	-- mostra o container correspondente
	if List_Right_Container[name] then
		List_Right_Container[name].Visible = true
	end
	

end)

G1L["DeleteGui"].MouseButton1Click:Connect(function()
	G1L["ScreenGui"]:Destroy()
	script:Destroy()
end)

G1L["IconMod"].MouseButton1Click:Connect(function()
	G1L["Container_Frame"].Visible = true
	G1L["IconMod"].Visible = false
end)
--=====================================================--

--==============================================================================--





--=====================================================--
-- Fun√ß√£o para criar bot√µes dinamicamente
--=====================================================--

function CreatList(instance, data)
	for _, name in ipairs(data) do
		local Btn = Instance.new("TextButton", instance)
		Btn.Size = UDim2.new(1, -10, 0, 40)
		Btn.BackgroundColor3 = colors.Secondary
		Btn.TextColor3 = colors.Text
		Btn.Font = Enum.Font.GothamBold
		Btn.TextSize = 16
		Btn.Text = name
		Btn.BorderSizePixel = 0
		Btn.AutoButtonColor = true

		-- Efeito hover
		Btn.MouseEnter:Connect(function()
			Btn.BackgroundColor3 = colors.ButtonHover
		end)
		Btn.MouseLeave:Connect(function()
			Btn.BackgroundColor3 = colors.Secondary
		end)

		-- A√ß√£o ao clicar ‚Üí troca de aba
		Btn.MouseButton1Click:Connect(function()
			print("Clicou em:", name)

			-- esconde todos os containers
			for _, cont in pairs(List_Right_Container) do
				cont.Visible = false
			end

			-- mostra o container correspondente
			if List_Right_Container[name] then
				List_Right_Container[name].Visible = true
			end
		end)

		-- Deixar bonitinho
		applyCorner(Btn, UDim.new(0, 8))
	end
end

-- Criar bot√µes no menu lateral
CreatList(G1L["Left_Container"], List_Mods)


local currentIndex = 1
local currentContainer
local currentRenderConn


-- Fun√ß√£o principal de foco
local function focus(npc, list)
	if not npc then return end
	local humanoidRoot = npc:FindFirstChild("HumanoidRootPart")

	--[[
	if not humanoidRoot then return end
	workspace.CurrentCamera.CameraSubject = humanoidRoot
	]]

	if humanoidRoot then
		-- Se for NPC com HumanoidRootPart
		workspace.CurrentCamera.CameraSubject = humanoidRoot
	else
		-- Se for apenas um Part, modelo sem humanoid
		if npc:IsA("BasePart") then
			workspace.CurrentCamera.CameraSubject = npc
		elseif npc:IsA("Model") then
			local primary = npc.PrimaryPart or npc:FindFirstChildWhichIsA("BasePart")
			if primary then
				workspace.CurrentCamera.CameraSubject = primary
			end
		end
	end

	print("Focando em:", npc.Name)

	-- Destroi container/conex√£o anterior
	if currentContainer then
		currentContainer:Destroy()
		currentContainer = nil
	end
	if currentRenderConn then
		currentRenderConn:Disconnect()
		currentRenderConn = nil
	end

	-- Pr√≥ximo NPC
	local function focusNextNpc()
		if #Npcs_List == 0 then return end
		currentIndex = currentIndex + 1
		if currentIndex > #Npcs_List then
			currentIndex = 1
		end
		focus(Npcs_List[currentIndex], Npcs_List)
	end

	-- Anterior NPC
	local function focusPrevNpc()
		if #Npcs_List == 0 then return end
		currentIndex = currentIndex - 1
		if currentIndex < 1 then
			currentIndex = #Npcs_List
		end
		focus(Npcs_List[currentIndex], Npcs_List)
	end


	-- Cria container (agrupa bot√µes)
	local container_Focus = Instance.new("Frame", G1L["ScreenGui"])
	container_Focus.Size = UDim2.new(0, 200, 0, 100)
	container_Focus.BackgroundTransparency = 1 -- invis√≠vel
	currentContainer = container_Focus

	-- Bot√£o reset
	local floatingBtn = Instance.new("TextButton")
	floatingBtn.Size = UDim2.new(0, 160, 0, 40)
	floatingBtn.Position = UDim2.new(0, 20, 0, 0)
	floatingBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
	floatingBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
	floatingBtn.Font = Enum.Font.SourceSansBold
	floatingBtn.TextSize = 14
	floatingBtn.Text = "Reset Camera ("..npc.Name..")"
	floatingBtn.Parent = container_Focus

	-- Bot√£o pr√≥ximo
	local proximo = Instance.new("TextButton")
	proximo.Size = UDim2.new(0, 80, 0, 40)
	proximo.Position = UDim2.new(0, 110, 0, 50)
	proximo.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
	proximo.TextColor3 = Color3.fromRGB(255, 255, 255)
	proximo.Font = Enum.Font.SourceSansBold
	proximo.TextSize = 14
	proximo.Text = "Pr√≥ximo"
	proximo.Parent = container_Focus
	proximo.MouseButton1Click:Connect(focusNextNpc)

	-- Bot√£o anterior
	local anterior = Instance.new("TextButton")
	anterior.Size = UDim2.new(0, 80, 0, 40)
	anterior.Position = UDim2.new(0, 10, 0, 50)
	anterior.BackgroundColor3 = Color3.fromRGB(50, 100, 200)
	anterior.TextColor3 = Color3.fromRGB(255, 255, 255)
	anterior.Font = Enum.Font.SourceSansBold
	anterior.TextSize = 14
	anterior.Text = "Anterior"
	anterior.Parent = container_Focus
	anterior.MouseButton1Click:Connect(focusPrevNpc)

	-- Reset c√¢mera
	floatingBtn.MouseButton1Click:Connect(function()
		local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			workspace.CurrentCamera.CameraSubject = humanoid
			print("C√¢mera resetada para o player")
		end
		if currentContainer then
			currentContainer:Destroy()
			currentContainer = nil
		end
		if currentRenderConn then
			currentRenderConn:Disconnect()
			currentRenderConn = nil
		end
	end)

	-- Faz o container seguir o NPC
	currentRenderConn = game:GetService("RunService").RenderStepped:Connect(function()
		if humanoidRoot and humanoidRoot.Parent and container_Focus.Parent then
			local cam = workspace.CurrentCamera
			local screenPos, onScreen = cam:WorldToViewportPoint(humanoidRoot.Position)
			container_Focus.Visible = onScreen
			if onScreen then
				container_Focus.Position = UDim2.new(0, screenPos.X - container_Focus.Size.X.Offset/2, 0, screenPos.Y - container_Focus.Size.Y.Offset/2)
			end
		else
			if currentRenderConn then
				currentRenderConn:Disconnect()
				currentRenderConn = nil
			end
		end
	end)
end


-- Fun√ß√£o para criar bot√µes de NPC
local function criarNpcButton(npc, parent)
	local btn = Instance.new("TextButton")
	btn.Name = npc.Name .. "_Btn"
	btn.Size = UDim2.new(1, 0, 0, 30)
	btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.Font = Enum.Font.SourceSansBold
	btn.TextSize = 18
	btn.Text = npc.Name
	btn.Parent = List_Frame_Mods[parent]

	btn.MouseButton1Click:Connect(function()
		-- define √≠ndice atual para esse NPC
		for i, v in ipairs(Npcs_List) do
			if v == npc then
				currentIndex = i
				break
			end
		end
		focus(npc, Npcs_List)
	end)
end


-- Fun√ß√£o para atualizar lista de NPCs
local function atualizarNPCs()
	local npcFrame = List_Frame_Mods["Npc"]
	if not npcFrame then return end

	-- limpa bot√µes antigos
	for _, child in ipairs(npcFrame:GetChildren()) do
		if child:IsA("TextButton") then
			child:Destroy()
		end
	end

	-- cria bot√µes para cada NPC
	for _, npc in ipairs(Npcs_List) do
		criarNpcButton(npc, "Npc")
	end
end


-- Fun√ß√£o para verificar e adicionar NPC
local function addNpc(npc)
	if npc:IsA("Model") then
		local humanoid = npc:FindFirstChildOfClass("Humanoid")
		if humanoid and humanoid.Name == "NPC" then
			table.insert(Npcs_List, npc)
			atualizarNPCs()
			print("NPC adicionado:", npc.Name)
		end
	end
end

-- Fun√ß√£o para remover NPC da lista
local function removeNpc(npc)
	for i, v in ipairs(Npcs_List) do
		if v == npc then
			table.remove(Npcs_List, i)
			atualizarNPCs()
			print("NPC removido:", npc.Name)
			break
		end
	end
end

-- Inicial: pega todos os que j√° existem
for _, npc in ipairs(Characters:GetChildren()) do
	addNpc(npc)
end

-- Eventos: acompanha mudan√ßas em tempo real
Characters.ChildAdded:Connect(addNpc)
Characters.ChildRemoved:Connect(removeNpc)

-- chamada inicial (j√° depois de addNpc dos existentes)
atualizarNPCs()

-- =====================================
-- Cria√ß√£o dos T√≠tulos
-- =====================================

function Create_Titles(Parent, Name, Text, Observacao, Retorno)
	local container_titles = Instance.new("Frame", List_Frame_Mods_toggled[Parent])
	container_titles.Name = Name
	container_titles.Size = UDim2.new(0.95, 0, 0, 60)
	container_titles.BackgroundTransparency = 1

	-- Layout horizontal
	local ly = Instance.new("UIListLayout", container_titles)
	ly.FillDirection = Enum.FillDirection.Horizontal
	ly.HorizontalAlignment = Enum.HorizontalAlignment.Left
	ly.VerticalAlignment = Enum.VerticalAlignment.Center
	ly.SortOrder = Enum.SortOrder.LayoutOrder
	ly.Padding = UDim.new(0, 10)

	-- Padding interno
	local padding = Instance.new("UIPadding", container_titles)
	padding.PaddingLeft = UDim.new(0, 5)
	padding.PaddingRight = UDim.new(0, 5)

	-- Container para texto (t√≠tulo + observa√ß√£o)
	local textContainer = Instance.new("Frame", container_titles)
	textContainer.Size = UDim2.new(1, -60, 1, 0) -- ocupa espa√ßo, menos √°rea do bot√£o
	textContainer.BackgroundTransparency = 1
	textContainer.AutomaticSize = Enum.AutomaticSize.Y

	local verticalLy = Instance.new("UIListLayout", textContainer)
	verticalLy.FillDirection = Enum.FillDirection.Vertical
	verticalLy.HorizontalAlignment = Enum.HorizontalAlignment.Left
	verticalLy.VerticalAlignment = Enum.VerticalAlignment.Top
	verticalLy.SortOrder = Enum.SortOrder.LayoutOrder
	verticalLy.Padding = UDim.new(0, 2)

	-- Label do t√≠tulo
	local title_mod_Lb = Instance.new("TextLabel", textContainer)
	title_mod_Lb.BackgroundTransparency = 1
	title_mod_Lb.Text = Text
	title_mod_Lb.Size = UDim2.new(1, 0, 0, 0)
	title_mod_Lb.TextColor3 = Color3.fromRGB(255, 255, 255)
	title_mod_Lb.Font = Enum.Font.SourceSansBold
	title_mod_Lb.TextSize = 18
	title_mod_Lb.TextXAlignment = Enum.TextXAlignment.Left
	title_mod_Lb.AutomaticSize = Enum.AutomaticSize.Y

	-- Observa√ß√£o
	local Obs = Instance.new("TextLabel", textContainer)
	Obs.BackgroundTransparency = 1
	Obs.Text = Observacao
	Obs.Size = UDim2.new(1, 0, 0, 0)
	Obs.TextColor3 = Color3.fromRGB(200, 200, 200)
	Obs.Font = Enum.Font.SourceSans
	Obs.TextSize = 14
	Obs.TextXAlignment = Enum.TextXAlignment.Left
	Obs.AutomaticSize = Enum.AutomaticSize.Y

	-- Toggle button (fixo √† direita)
	local toggle_btn = Instance.new("ImageButton", container_titles)
	toggle_btn.Size = UDim2.new(0, 50, 0, 30)
	toggle_btn.AnchorPoint = Vector2.new(1, 0.5)
	toggle_btn.Position = UDim2.new(1, -5, 0.5, 0)
	toggle_btn.Image = icons.fa_rr_toggle_left
	toggle_btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	toggle_btn.BackgroundTransparency = 0.15

	Instance.new("UICorner", toggle_btn).CornerRadius = UDim.new(0.5, 0)

	-- L√≥gica do toggle com anima√ß√£o
	local toggled = false
	toggle_btn.MouseButton1Click:Connect(function()
		toggled = not toggled

		local goal = {}
		if toggled then
			toggle_btn.Image = icons.fa_rr_toggle_right
			goal.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
		else
			toggle_btn.Image = icons.fa_rr_toggle_left
			goal.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		end

		TweenService:Create(toggle_btn, TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), goal):Play()

		if Retorno then
			Retorno(toggled)
		end
	end)
end

--=====================================================--
-- Cria√ß√£o das GUIs com toggle
--=====================================================--

Create_Titles("Mastermods" ,"Modelo", "Modelo", "Modelo de Fun√ß√µes", function(estado)
	if estado then
		print("Modelo ligado!")
	else
		print("Modelo desligado!")
	end
end)

-- Vari√°veis globais do Fly
local flyBodyVelocity
local flyJumpConn
local flyRenderConn
local flyInputConn
local flyMobile
local joystickVector = Vector2.new(0,0)
local touchConn
local joystick

-- Cria√ß√£o do t√≠tulo e funcionalidade do Fly
Create_Titles("Mastermods", "FlyMod", "FlyMod", "Poder para voar no map", function(estado)
	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoidRoot = character:WaitForChild("HumanoidRootPart")
	local humanoid = character:WaitForChild("Humanoid")
	local flySpeed = 50
	local uis = game:GetService("UserInputService")
	local cam = workspace.CurrentCamera

	-- Tabela para armazenar o estado das teclas
	local moveInput = {W=false, A=false, S=false, D=false, Space=false, Ctrl=false}

	if estado then
		print("Fly ligado!")

		-- Cria joystick apenas se ainda n√£o existir
		local uis = game:GetService("UserInputService")

		if uis.TouchEnabled and not flyMobile then
			-- Cria joystick visual
			local joystickFrame = Instance.new("Frame", G1L["ScreenGui"])
			joystickFrame.Size = UDim2.new(0, 100, 0, 100)
			joystickFrame.Position = UDim2.new(0.1, 0, 0.5, 0)
			joystickFrame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
			joystickFrame.Visible = true
			applyCorner(joystickFrame, UDim.new(0, 50))

			local joystickFrame_D = Instance.new("Frame", joystickFrame)
			joystickFrame_D.Size = UDim2.new(0.2, 0, 0.2, 0)
			joystickFrame_D.Position = UDim2.new(0.4,0,0.4,0)
			joystickFrame_D.BackgroundColor3 = Color3.new(0.6,0.6,0.6)
			joystickFrame_D.Visible = true
			applyDraggable(joystickFrame_D, true, true)
			applyCorner(joystickFrame_D, UDim.new(0, 50))

			flyMobile = joystickFrame
			joystick = joystickFrame

			-- Conex√£o do toque para mover joystick

			-- Quando o toque terminar, centraliza o joystick
			uis.TouchEnded:Connect(function(touch)
				joystickVector = Vector2.new(0,0)
				if flyMobile then
					local joystickFrame_D = flyMobile:FindFirstChildOfClass("Frame") -- seu ponto arrast√°vel
					if joystickFrame_D then
						joystickFrame_D.Position = UDim2.new(0.4, 0, 0.4, 0) -- posi√ß√£o central original
					end
				end
			end)


			touchConn = uis.TouchMoved:Connect(function(touch)
				-- Posi√ß√£o relativa ao centro do joystick
				local localPos = Vector2.new(
					touch.Position.X - (joystickFrame.AbsolutePosition.X + joystickFrame.AbsoluteSize.X/2),
					touch.Position.Y - (joystickFrame.AbsolutePosition.Y + joystickFrame.AbsoluteSize.Y/2)
				)

				-- Limita para n√£o sair do raio do frame
				local maxRadius = joystickFrame.AbsoluteSize.X / 2
				if localPos.Magnitude > maxRadius then
					localPos = localPos.Unit * maxRadius
				end

				-- Atualiza joystickVector normalizado (-1 a 1)
				joystickVector = Vector2.new(
					localPos.X / maxRadius,
					localPos.Y / maxRadius
				)

				-- Atualiza a posi√ß√£o visual do ponto arrast√°vel
				joystickFrame_D.Position = UDim2.new(
					0.5 + joystickVector.X * 0.5 - joystickFrame_D.Size.X.Offset / joystickFrame.AbsoluteSize.X,
					0,
					0.5 + joystickVector.Y * 0.5 - joystickFrame_D.Size.Y.Offset / joystickFrame.AbsoluteSize.Y,
					0
				)
			end)

		end


		-- Cria BodyVelocity
		if not flyBodyVelocity or not flyBodyVelocity.Parent then
			flyBodyVelocity = Instance.new("BodyVelocity")
			flyBodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
			flyBodyVelocity.Velocity = Vector3.new(0,0,0)
			flyBodyVelocity.P = 1250
			flyBodyVelocity.Parent = humanoidRoot
		end

		-- Atualiza dire√ß√£o do voo
		flyRenderConn = game:GetService("RunService").RenderStepped:Connect(function()
			local dir = Vector3.new(0,0,0)

			if flyMobile then
				-- Usa o joystick para mobile
				local camLook = cam.CFrame.LookVector
				local camRight = cam.CFrame.RightVector
				local forward = Vector3.new(camLook.X,0,camLook.Z).Unit
				local right = Vector3.new(camRight.X,0,camRight.Z).Unit
				dir = forward * joystickVector.Y + right * joystickVector.X
			else
				-- Usa teclado
				dir = Vector3.new(
					(moveInput.D and 1 or 0) - (moveInput.A and 1 or 0),
					(moveInput.Space and 1 or 0) - (moveInput.Ctrl and 1 or 0),
					(moveInput.W and 1 or 0) - (moveInput.S and 1 or 0)
				)
			end

			if dir.Magnitude > 0 then
				dir = dir.Unit
			end

			if flyBodyVelocity then
				local lookVector = cam.CFrame.LookVector
				local rightVector = cam.CFrame.RightVector
				local upVector = Vector3.new(0,1,0)
				flyBodyVelocity.Velocity = (lookVector*dir.Z + rightVector*dir.X + upVector*dir.Y) * flySpeed
			end
		end)


		-- Impulso ao pular
		flyJumpConn = humanoid.Jumping:Connect(function()
			local impulse = cam.CFrame.LookVector * flySpeed
			humanoidRoot.Velocity = humanoidRoot.Velocity + impulse
		end)

		-- Input do jogador (PC) e Mobile
		flyInputConn = uis.InputBegan:Connect(function(input, processed)
			if processed then return end
			if input.UserInputType == Enum.UserInputType.Keyboard then
				if moveInput[input.KeyCode.Name] ~= nil then
					moveInput[input.KeyCode.Name] = true
				end
				
			elseif input.UserInputType == Enum.UserInputType.Touch then
				-- Mobile simples: move na dire√ß√£o que o personagem olha
				-- Pega a dire√ß√£o da c√¢mera
				local camLook = cam.CFrame.LookVector
				local camRight = cam.CFrame.RightVector

				-- Normaliza para manter apenas a dire√ß√£o
				local dir = Vector3.new(camLook.X, 0, camLook.Z).Unit

				-- Aplica para frente/tras baseado na orienta√ß√£o
				moveInput.W = true    -- sempre mover pra frente no look da c√¢mera
				moveInput.S = false
				moveInput.A = false
				moveInput.D = false

			end
		end)

		uis.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard then
				if moveInput[input.KeyCode.Name] ~= nil then
					moveInput[input.KeyCode.Name] = false
				end
			end
		end)

	else
		print("Fly desligado!")

		-- Desconecta tudo e destr√≥i o BodyVelocity
		if flyBodyVelocity then
			flyBodyVelocity:Destroy()
			flyBodyVelocity = nil
		end
		if flyRenderConn then
			flyRenderConn:Disconnect()
			flyRenderConn = nil
		end
		if flyJumpConn then
			flyJumpConn:Disconnect()
			flyJumpConn = nil
		end
		if flyInputConn then
			flyInputConn:Disconnect()
			flyInputConn = nil
		end
		if joystick then
			joystick:Destroy()
			joystick = nil
			flyMobile = nil
		end
	end
end)



Create_Titles("Mastermods", "Auto Madeira", "Ativar Auto Madeira", "Colotar e quebrar Madeiras", function(estado)
	if estado then
		print(" Auto Madeira ligado!")
	else
		print(" Auto Madeira desligado!")
	end
end)

-- pode dar erro se n√£o for executor 
local Conect_Clone

Create_Titles("Mastermods", "Clone Player", "Ativar Clone", "Clonar Jogador", function(estado)
	if estado then
		print("Auto Clone ligado!")

		-- Verifica se o personagem existe
		if player.Character then
			-- Clona o personagem
			local clone_player = player.Character:Clone()

			-- Remove scripts indesejados (opcional)
			for _, obj in pairs(clone_player:GetDescendants()) do
				if obj:IsA("Script") or obj:IsA("LocalScript") then
					obj:Destroy()
				end
			end

			-- Posiciona o clone ao lado do jogador
			if clone_player.PrimaryPart then
				clone_player:SetPrimaryPartCFrame(player.Character.PrimaryPart.CFrame * CFrame.new(5,0,0))
			else
				print("Erro: personagem n√£o tem PrimaryPart")
			end

			-- Coloca o clone no Workspace
			clone_player.Parent = workspace
			Conect_Clone = clone_player
		end
	else
		print("Auto Clone desligado!")

		-- Remove clone se existir
		if Conect_Clone and Conect_Clone.Parent then
			Conect_Clone:Destroy()
		end
		Conect_Clone = nil
	end
end)
