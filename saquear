-- 🔧 Serviços
local Players = game:GetService("Players")

-- 🔄 Variáveis
local plr = Players.LocalPlayer
local character = plr.Character or plr.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

-- 🎯 Configurações
local pontoArena = Vector3.new(-394.9, 54.0, -741.6) -- Ponto fixo inicial arena
local pastaNpcs = workspace:WaitForChild("EnemyFolder")
local distanciaMinima = 10
local distanciaMaxima = 50

-- 🧠 Estado
local autoFarmAtivo = false
local partidaAtiva = false

-- 🌐 Pontos salvos pelo usuário (tabela)
local pontosSalvos = {}

-- 🎨 Interface UI
local gui = Instance.new("ScreenGui", plr:WaitForChild("PlayerGui"))
gui.Name = "AutoFarmGui"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true

local frame = Instance.new("Frame")
frame.Name = "MainFrame"
frame.Size = UDim2.new(0, 300, 0, 300)
frame.Position = UDim2.new(0, 20, 0, 80)
frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
frame.BorderSizePixel = 0
frame.AnchorPoint = Vector2.new(0, 0)
frame.Active = true
frame.Draggable = true
frame.Parent = gui

local corner = Instance.new("UICorner", frame)
corner.CornerRadius = UDim.new(0, 8)

-- Botão Ativar AutoFarm
local button = Instance.new("TextButton")
button.Size = UDim2.new(1, -20, 0, 40)
button.Position = UDim2.new(0, 10, 0, 10)
button.BackgroundColor3 = Color3.fromRGB(65, 65, 65)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.TextSize = 18
button.Font = Enum.Font.GothamBold
button.Text = "Ativar AutoFarm"
button.Parent = frame

local buttonCorner = Instance.new("UICorner", button)
buttonCorner.CornerRadius = UDim.new(0, 6)

-- Botão para salvar ponto atual
local salvarPontoBtn = Instance.new("TextButton")
salvarPontoBtn.Size = UDim2.new(1, -20, 0, 30)
salvarPontoBtn.Position = UDim2.new(0, 10, 0, 60)
salvarPontoBtn.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
salvarPontoBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
salvarPontoBtn.TextSize = 16
salvarPontoBtn.Font = Enum.Font.GothamBold
salvarPontoBtn.Text = "Salvar Ponto Atual"
salvarPontoBtn.Parent = frame

local salvarPontoCorner = Instance.new("UICorner", salvarPontoBtn)
salvarPontoCorner.CornerRadius = UDim.new(0, 6)

-- ScrollingFrame para listar pontos
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, -20, 1, -110)
scrollFrame.Position = UDim2.new(0, 10, 0, 100)
scrollFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
scrollFrame.BorderSizePixel = 0
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollFrame.ScrollBarThickness = 6
scrollFrame.Parent = frame

local scrollCorner = Instance.new("UICorner", scrollFrame)
scrollCorner.CornerRadius = UDim.new(0, 6)

-- Layout para botões dos pontos
local layout = Instance.new("UIListLayout", scrollFrame)
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0, 5)

-- Atualizar CanvasSize do scroll automaticamente
layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
	scrollFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
end)

-- Função para atualizar lista de pontos na UI
local function atualizarListaPontos()
	-- Limpar antigos filhos exceto layout
	for _, child in pairs(scrollFrame:GetChildren()) do
		if child:IsA("TextButton") then
			child:Destroy()
		end
	end

	for i, ponto in ipairs(pontosSalvos) do
		local btnPonto = Instance.new("TextButton")
		btnPonto.Size = UDim2.new(1, -40, 0, 30)
		btnPonto.BackgroundColor3 = Color3.fromRGB(85, 85, 85)
		btnPonto.TextColor3 = Color3.fromRGB(255, 255, 255)
		btnPonto.TextSize = 14
		btnPonto.Font = Enum.Font.Gotham
		btnPonto.Text = ("Ponto %d: (%.1f, %.1f, %.1f)"):format(i, ponto.Position.X, ponto.Position.Y, ponto.Position.Z)
		btnPonto.LayoutOrder = i
		btnPonto.Parent = scrollFrame

		-- Botão para ir para o ponto
		btnPonto.MouseButton1Click:Connect(function()
			hrp.CFrame = CFrame.new(ponto.Position + Vector3.new(0, 3, 0))
		end)

		-- Botão remover (x)
		local removeBtn = Instance.new("TextButton")
		removeBtn.Size = UDim2.new(0, 30, 1, 0)
		removeBtn.Position = UDim2.new(1, -30, 0, 0)
		removeBtn.BackgroundColor3 = Color3.fromRGB(170, 40, 40)
		removeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
		removeBtn.TextSize = 18
		removeBtn.Font = Enum.Font.GothamBold
		removeBtn.Text = "X"
		removeBtn.Parent = btnPonto

		removeBtn.MouseButton1Click:Connect(function()
			table.remove(pontosSalvos, i)
			atualizarListaPontos()
		end)
	end
end

-- Ao clicar salvar ponto atual
salvarPontoBtn.MouseButton1Click:Connect(function()
	local posAtual = hrp.Position
	table.insert(pontosSalvos, {Position = posAtual})
	atualizarListaPontos()
end)

-- 🔘 Bolinha de status
local statusBall = Instance.new("Frame")
statusBall.Name = "StatusIndicator"
statusBall.Size = UDim2.new(0, 16, 0, 16)
statusBall.Position = UDim2.new(0, -8, 0, -8)
statusBall.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Começa vermelho
statusBall.BorderSizePixel = 0
statusBall.Parent = frame

local statusCorner = Instance.new("UICorner")
statusCorner.CornerRadius = UDim.new(1, 0)
statusCorner.Parent = statusBall

-- 🔁 Atualizar cor da bolinha
local function atualizarStatus(cor)
	if statusBall then
		statusBall.BackgroundColor3 = cor
	end
end

-- 🧭 Teleportes
local function teleportarParaArena()
	hrp.CFrame = CFrame.new(pontoArena + Vector3.new(0, 3, 0))
end

local function teleportarParaSpawn()
	local spawnLocation = plr.RespawnLocation or workspace:FindFirstChild("SpawnLocation")
	if spawnLocation then
		hrp.CFrame = spawnLocation.CFrame + Vector3.new(0, 3, 0)
	else
		print("⚠️ Spawn não encontrado")
	end
end

-- 🎯 Busca NPC
local function getNpcMaisProximo()
	local menorDist = math.huge
	local alvo = nil

	for _, npc in pairs(pastaNpcs:GetChildren()) do
		if npc:IsA("Model")
			and npc:FindFirstChild("HumanoidRootPart")
			and npc:FindFirstChild("Humanoid")
			and npc.Humanoid.Health > 0 then

			local dist = (hrp.Position - npc.HumanoidRootPart.Position).Magnitude
			if dist >= distanciaMinima and dist <= distanciaMaxima and dist < menorDist then
				menorDist = dist
				alvo = npc
			end
		end
	end

	return alvo
end

-- 🚶 Move até NPC
local function moverAteNpc(npc)
	if npc and npc:FindFirstChild("HumanoidRootPart") then
		humanoid:MoveTo(npc.HumanoidRootPart.Position)
		local sucesso = humanoid.MoveToFinished:Wait(5)
		if not sucesso then
			print("⚠️ Falha ao mover até NPC")
		end
	end
end

-- 🧠 Lógica principal da arena (com opção de usar ponto selecionado ou fixo)
local function iniciarArena()
	partidaAtiva = true

	print("🎯 Indo para a arena...")
	teleportarParaArena()

	atualizarStatus(Color3.fromRGB(255, 255, 0)) -- 🟡 Esperando
	print("⌛ Esperando 3s para iniciar...")
	task.wait(3)

	local tempoSemNpc = 0

	while autoFarmAtivo do
		local npc = getNpcMaisProximo()

		if npc then
			tempoSemNpc = 0
			atualizarStatus(Color3.fromRGB(0, 255, 0)) -- 🟢 Seguindo
			moverAteNpc(npc)
			task.wait(0.5)
		else
			atualizarStatus(Color3.fromRGB(255, 255, 0)) -- 🟡 Esperando NPC
			tempoSemNpc += 1
			if tempoSemNpc >= 10 then
				print("⌛ Nenhum NPC em 10s. Encerrando arena.")
				break
			end
			task.wait(1)
		end
	end

	print("🏁 Arena finalizada, voltando ao spawn.")
	teleportarParaSpawn()
	atualizarStatus(Color3.fromRGB(255, 255, 0)) -- 🟡 Esperando

	print("⏳ Aguardando 10s...")
	task.wait(10)

	partidaAtiva = false

	if autoFarmAtivo then
		iniciarArena()
	end
end

-- ▶️ Início do sistema
local function iniciarSistema()
	task.spawn(function()
		if not autoFarmAtivo then return end
		iniciarArena()
	end)
end

-- ⬅️ Botão ativar/desativar
button.MouseButton1Click:Connect(function()
	autoFarmAtivo = not autoFarmAtivo

	if autoFarmAtivo then
		button.Text = "Desativar AutoFarm"
		atualizarStatus(Color3.fromRGB(255, 255, 0)) -- 🟡 Esperando
		iniciarSistema()
	else
		button.Text = "Ativar AutoFarm"
		atualizarStatus(Color3.fromRGB(255, 0, 0)) -- 🔴 Off
		partidaAtiva = false
		humanoid:MoveTo(hrp.Position)
	end
end)
