-- Acessa o jogador local
local player = game.Players.LocalPlayer

-- Cria uma nova ferramenta
local tool = Instance.new("Tool")
tool.Name = "hitboxcoletor"
tool.RequiresHandle = true

-- Cria o objeto Handle da ferramenta
local handle = Instance.new("Part")
handle.Name = "Handle"
handle.Size = Vector3.new(0, 0, 0)
handle.Anchored = false
handle.CanCollide = false
handle.BrickColor = BrickColor.new("Bright red")
handle.Parent = tool

-- Adiciona a ferramenta à mochila do jogador
tool.Parent = player.Backpack

-- Variável para armazenar o bloco
local block

-- Função chamada quando a ferramenta é equipada
local function onEquipped()
    print("Ferramenta equipada!")

    -- Cria o bloco que funcionará como um segundo corpo
    block = Instance.new("Part")
    block.Size = Vector3.new(2000, 50, 2000)  -- Tamanho do bloco
    block.Anchored = false
    block.CanCollide = false  -- Impede colisão com o jogador
    block.BrickColor = BrickColor.new("Bright blue")
    block.Parent = game.Workspace

    -- Função para controlar o bloco
    local function controlBlock()
        while tool.Parent do
            -- Teleporta o bloco para a posição do jogador
            block.Position = player.Character.PrimaryPart.Position + Vector3.new(3, 0, 0)

            -- Movimentação do bloco
            if player.Character.Humanoid.MoveDirection.Magnitude > 0 then
                block.CFrame = block.CFrame + (player.Character.Humanoid.MoveDirection * 0.1)
            end

            wait(0.01)
        end
    end

    controlBlock()
end

-- Função chamada quando a ferramenta é desequipada
local function onUnequipped()
    print("Ferramenta desequipada!")

    -- Remove o bloco se existir
    if block then
        block:Destroy()
        block = nil
    end
end

-- Conectar os eventos
tool.Equipped:Connect(onEquipped)
tool.Unequipped:Connect(onUnequipped)

-- Mensagem de confirmação
print("Ferramenta de controlar bloco criada e adicionada à sua mochila!")
