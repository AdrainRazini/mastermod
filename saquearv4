-- üîß Servi√ßos
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local character = plr.Character or plr.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

-- üéØ Configura√ß√µes Iniciais Obs: Pode ser alterado
local pontoArena = Vector3.new(-394.9, 54.0, -741.6)
local pastaNpcs = workspace:FindFirstChild("EnemyFolder")

if not pastaNpcs then
	warn("‚ö†Ô∏è Pasta 'EnemyFolder' n√£o encontrada. Criando pasta provis√≥ria.")
	pastaNpcs = Instance.new("Folder")
	pastaNpcs.Name = "EnemyFolder_Provisoria"
	pastaNpcs.Parent = workspace
end

local Esperar_Npc = 10
local Esperar_Arena = 3

-- üß† Vari√°veis de Controle Obs: Um extra para controles devido ao respawn do personagem
local config = {
	distanciaMinima = 10,
	distanciaMaxima = 50,
	contador = false,
	highlightNPC = false,
	modoInteligente = false,
	ancoragem = false,
	autojump = true,
	voltar_origem = false,
	pontoArena = pontoArena
}
 
-- Cria√ß√£o da lista de cores 
local colors = {
	Red = Color3.fromRGB(255, 0, 0),
	Green = Color3.fromRGB(0, 255, 0),
	Blue = Color3.fromRGB(0, 0, 255),
	Yellow = Color3.fromRGB(255, 255, 0),
	Orange = Color3.fromRGB(255, 165, 0),
	Purple = Color3.fromRGB(128, 0, 128),
	Pink = Color3.fromRGB(255, 105, 180),
	White = Color3.fromRGB(255, 255, 255),
	Black = Color3.fromRGB(0, 0, 0),
	Gray = Color3.fromRGB(128, 128, 128),
	DarkGray = Color3.fromRGB(50, 50, 50),
	LightGray = Color3.fromRGB(200, 200, 200),
	Cyan = Color3.fromRGB(0, 255, 255),
	Magenta = Color3.fromRGB(255, 0, 255),
	Brown = Color3.fromRGB(139, 69, 19),
	Gold = Color3.fromRGB(255, 215, 0),
	Silver = Color3.fromRGB(192, 192, 192),
	Maroon = Color3.fromRGB(128, 0, 0),
	Navy = Color3.fromRGB(0, 0, 128),
	Lime = Color3.fromRGB(50, 205, 50),
	Olive = Color3.fromRGB(128, 128, 0),
	Teal = Color3.fromRGB(0, 128, 128),
	Aqua = Color3.fromRGB(0, 255, 170),
	Coral = Color3.fromRGB(255, 127, 80),
	Crimson = Color3.fromRGB(220, 20, 60),
	Indigo = Color3.fromRGB(75, 0, 130),
	Turquoise = Color3.fromRGB(64, 224, 208),
	Slate = Color3.fromRGB(112, 128, 144),
	Chocolate = Color3.fromRGB(210, 105, 30)
}


-- üß† Estados do Sistema
local autoFarmAtivo = false
local partidaAtiva = false
local notificacoesAtivas = true
local som = false
local autoTeleporteAtivo = false


-- üñºÔ∏è Fun√ß√£o utilit√°ria para criar UI Corner Obs: Aplicar Ui nas frames
local function applyCorner(instance, radius)
	local corner = Instance.new("UICorner")
	corner.CornerRadius = radius or UDim.new(0, 6)
	corner.Parent = instance
end


--=========================================================--


-- Cria√ß√£o da gui + frames verifica√ß√µes de exist√™ncia Obs: Acaba resetando o anterior no executor e studios
--[[
-- üßº Remover GUI anterior se j√° existir
local playerGui = plr:WaitForChild("PlayerGui")
local guiExistente = playerGui:FindFirstChild("AutoFarmGui")
if guiExistente then
	guiExistente:Destroy()
end

-- üß± Criar nova GUI
local gui = Instance.new("ScreenGui")
gui.Name = "AutoFarmGui"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = playerGui
]]


-- Cria√ß√£o da gui + frames Obs: Funciona bem no executor, mas duplica no studios

local gui = Instance.new("ScreenGui")
gui.Name = "AutoFarmGui"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = plr:WaitForChild("PlayerGui")


local frame = Instance.new("Frame")
frame.Name = "MainFrame"
frame.Size = UDim2.new(0, 200, 0, 70)
frame.Position = UDim2.new(0, 20, 0, 80)
frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = gui
applyCorner(frame, UDim.new(0, 8))

-- üå´Ô∏è Sombra
local shadow = Instance.new("ImageLabel")
shadow.Name = "Shadow"
shadow.Size = UDim2.new(1, 12, 1, 12)
shadow.Position = UDim2.new(0, -6, 0, -6)
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://1316045217"
shadow.ImageTransparency = 0.5
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10, 10, 118, 118)
shadow.ZIndex = 0
shadow.Parent = frame

-- üü¢ Bot√£o principal (Ativar)
local button = Instance.new("TextButton")
button.Size = UDim2.new(1, -30, 1, 0)
button.Position = UDim2.new(0, 0, 0, 0)
button.BackgroundColor3 = Color3.fromRGB(65, 65, 65)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.TextSize = 18
button.Font = Enum.Font.GothamBold
button.Text = "Ativar AutoFarm"
button.Parent = frame
applyCorner(button)

-- üîò Minimizar / Restaurar
local minimizarBtn = Instance.new("TextButton")
minimizarBtn.Size = UDim2.new(0, 30, 0, 30)
minimizarBtn.Position = UDim2.new(1, -30, 0, 0)
minimizarBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
minimizarBtn.Text = "-"
minimizarBtn.TextColor3 = Color3.new(1,1,1)
minimizarBtn.TextSize = 22
minimizarBtn.Font = Enum.Font.GothamBold
minimizarBtn.Parent = frame
applyCorner(minimizarBtn)

local restaurarBtn = minimizarBtn:Clone()
restaurarBtn.Text = "+"
restaurarBtn.Size = UDim2.new(0, 40, 0, 40)
restaurarBtn.Position = UDim2.new(0, 20, 0, 80)
restaurarBtn.Visible = false
restaurarBtn.Parent = gui

--=========================================================--

-- Cria√ß√£o das informa√ß√µes de estados Obs: Muito bom para demostra√ß√£o

-- üî¥ Bolinha de status
local statusBall = Instance.new("Frame")
statusBall.Name = "StatusIndicator"
statusBall.Size = UDim2.new(0, 16, 0, 16)
statusBall.Position = UDim2.new(0, -8, 0, -8)
statusBall.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
statusBall.BorderSizePixel = 0
statusBall.Parent = frame
applyCorner(statusBall, UDim.new(1, 0))
local notificacoes = {} -- lista de notifica√ß√µes atuais

local function criarNotificacao(texto, cor)
	if not notificacoesAtivas then return end

	local emoji = "üí¨"
	if cor == Color3.fromRGB(0, 255, 0) then
		emoji = "‚úÖ"
	elseif cor == Color3.fromRGB(255, 255, 0) then
		emoji = "‚è≥"
	elseif cor == Color3.fromRGB(255, 0, 0) then
		emoji = "üõë"
	elseif cor == Color3.fromRGB(255, 165, 0) then
		emoji = "ü§ñ"
	elseif cor == Color3.fromRGB(0, 200, 255) then
		emoji = "üì°"
	elseif cor == Color3.fromRGB(170, 0, 255) then
		emoji = "üíÄ"
	end

	local notificacao = Instance.new("TextLabel")
	notificacao.AnchorPoint = Vector2.new(1, 1)
	notificacao.Size = UDim2.new(0, 260, 0, 30)
	notificacao.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	notificacao.TextColor3 = Color3.new(1, 1, 1)
	notificacao.Font = Enum.Font.Gotham
	notificacao.TextSize = 13
	notificacao.Text = emoji .. "  " .. texto
	notificacao.TextXAlignment = Enum.TextXAlignment.Left
	notificacao.TextTransparency = 1
	notificacao.BackgroundTransparency = 1
	notificacao.ZIndex = 10
	notificacao.Parent = gui
	applyCorner(notificacao)

	table.insert(notificacoes, notificacao)

	-- Atualiza posi√ß√µes para empilhar
	for i, nota in ipairs(notificacoes) do
		local posY = -20 - ((i - 1) * 35)
		nota.Position = UDim2.new(1, -20, 1, posY)
	end

	local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	game:GetService("TweenService"):Create(notificacao, tweenInfo, {
		TextTransparency = 0,
		BackgroundTransparency = 0.1
	}):Play()

	task.delay(3, function()
		local fadeOut = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
		local tween = game:GetService("TweenService"):Create(notificacao, fadeOut, {
			TextTransparency = 1,
			BackgroundTransparency = 1
		})
		tween:Play()
		tween.Completed:Wait()

		-- Remover da lista e destruir
		for i, nota in ipairs(notificacoes) do
			if nota == notificacao then
				table.remove(notificacoes, i)
				break
			end
		end
		notificacao:Destroy()

		-- Reajusta posi√ß√µes ap√≥s uma notifica√ß√£o sair
		for i, nota in ipairs(notificacoes) do
			local posY = -20 - ((i - 1) * 35)
			nota.Position = UDim2.new(1, -20, 1, posY)
		end
	end)
end


-- üîÅ Atualizador de status visual/textual
local function atualizarStatus(cor)
	statusBall.BackgroundColor3 = cor
end

local function atualizarStatusComTexto(cor, texto)
	atualizarStatus(cor)
	criarNotificacao("Status: " .. texto, cor)
end




--=========================================================--

-- Cria√ß√£o da Frame de configura√ß√£o

-- üì¶ Configura√ß√µes
local configBtn = Instance.new("TextButton")
configBtn.Size = UDim2.new(0, 30, 0, 30)
configBtn.Position = UDim2.new(1, -30, 1, -30)
configBtn.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
configBtn.Text = "‚öôÔ∏è"
configBtn.TextColor3 = Color3.new(1,1,1)
configBtn.Font = Enum.Font.GothamBold
configBtn.TextSize = 20
configBtn.Parent = frame
applyCorner(configBtn)

-- ‚öôÔ∏è Painel de Config
local configFrame = Instance.new("Frame")
configFrame.Size = UDim2.new(0, 300, 0, 400)
configFrame.Position = UDim2.new(0, frame.Position.X.Offset + 220, 0, frame.Position.Y.Offset)
configFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
configFrame.Visible = false
configFrame.Active = true
configFrame.Draggable = true
configFrame.Parent = gui
applyCorner(configFrame, UDim.new(0, 8))

local configTitle = Instance.new("TextLabel")
configTitle.Size = UDim2.new(1, 0, 0, 30)
configTitle.BackgroundTransparency = 1
configTitle.Text = "üîß Configura√ß√µes"
configTitle.TextColor3 = Color3.new(1, 1, 1)
configTitle.Font = Enum.Font.GothamBold
configTitle.TextSize = 18
configTitle.Parent = configFrame

--=========================================================--


-- Cria√ß√£o de se√ß√µes Obs: Melhoria do antigo Frame Config

-- üåê Se√ß√µes
local secoes = {
	["Player"] = {},
	["Jogo"] = {},
	["Farm"] = {},
	["Teleportes"] = {}
}

-- üß≠ Menu de Abas
local abasFrame = Instance.new("Frame")
abasFrame.Size = UDim2.new(1, 0, 0, 30)
abasFrame.BackgroundTransparency = 1
abasFrame.Position = UDim2.new(0, 0, 0, 30)
abasFrame.Parent = configFrame

-- üîÅ Fun√ß√£o para criar abas
local abaSelecionada = "Player"

local function atualizarVisibilidade()
	for nomeSecao, elementos in pairs(secoes) do
		for _, ui in pairs(elementos) do
			ui.Visible = (nomeSecao == abaSelecionada)
		end
	end
end

local function criarAba(nome, posX)
	local botao = Instance.new("TextButton")
	botao.Size = UDim2.new(0, 60, 0, 25)
	botao.Position = UDim2.new(0, posX, 0, 0)
	botao.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	botao.Text = nome
	botao.TextColor3 = Color3.new(1, 1, 1)
	botao.Font = Enum.Font.GothamBold
	botao.TextSize = 13
	botao.Parent = abasFrame
	applyCorner(botao, UDim.new(0, 4))

	botao.MouseButton1Click:Connect(function()
		abaSelecionada = nome
		atualizarVisibilidade()
	end)
end

-- abas Obs: Cria√ß√£o das abas
criarAba("Player", 10)
criarAba("Jogo", 80)
criarAba("Farm", 150)
criarAba("Teleportes", 220)



-- Cria√ß√£o de entradas e checkboxes Obs: Melhoria do antigo Frame Config

local function criarEntrada(titulo, posY, valorAtual, onChange, secao)
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(0, 120, 0, 20)
	label.Position = UDim2.new(0, 10, 0, posY)
	label.Text = titulo
	label.TextColor3 = Color3.new(1,1,1)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = configFrame

	local box = Instance.new("TextBox")
	box.Size = UDim2.new(0, 70, 0, 20)
	box.Position = UDim2.new(1, -80, 0, posY)
	box.Text = tostring(valorAtual)
	box.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	box.TextColor3 = Color3.new(1, 1, 1)
	box.Font = Enum.Font.Gotham
	box.TextSize = 14
	box.ClearTextOnFocus = false
	box.Parent = configFrame
	applyCorner(box)

	box.FocusLost:Connect(function()
		local value = tonumber(box.Text)
		if value then onChange(value) end
	end)

	label.Visible = false
	box.Visible = false
	table.insert(secoes[secao], label)
	table.insert(secoes[secao], box)
end

local function criarCheckbox(titulo, posY, valorInicial, callback, secao)
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(0, 140, 0, 20)
	label.Position = UDim2.new(0, 10, 0, posY)
	label.Text = titulo
	label.TextColor3 = Color3.new(1, 1, 1)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = configFrame

	local box = Instance.new("TextButton")
	box.Size = UDim2.new(0, 20, 0, 20)
	box.Position = UDim2.new(1, -30, 0, posY)
	box.BackgroundColor3 = valorInicial and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(70, 70, 70)
	box.Text = valorInicial and "‚úî" or ""
	box.TextColor3 = Color3.new(1, 1, 1)
	box.Font = Enum.Font.GothamBold
	box.TextSize = 16
	box.Parent = configFrame
	applyCorner(box, UDim.new(0, 4))

	box.MouseButton1Click:Connect(function()
		valorInicial = not valorInicial
		box.BackgroundColor3 = valorInicial and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(70, 70, 70)
		box.Text = valorInicial and "‚úî" or ""
		callback(valorInicial)
	end)

	label.Visible = false
	box.Visible = false
	table.insert(secoes[secao], label)
	table.insert(secoes[secao], box)
end
 
--====================================================================================================================--
-- Configura√ß√µes da farme Obs: Pode mudar as variaveis iniciais se quiser, s√≥ n√£o apague.
-- üéØ Farm
--[[
criarEntrada("Dist√¢ncia M√≠nima:", 70, config.distanciaMinima, function(v)
	config.distanciaMinima = tonumber(v) or config.distanciaMinima
end, "Farm")
]]
criarEntrada("Dist√¢ncia M√°xima:", 70, config.distanciaMaxima, function(v)
	config.distanciaMaxima = tonumber(v) or config.distanciaMaxima
end, "Farm")

criarCheckbox("Contador", 100, config.contador, function(v) config.contador = v end, "Farm")
criarCheckbox("Highlight NPC", 130, config.highlightNPC, function(v) config.highlightNPC = v end, "Farm")
criarCheckbox("Modo Inteligente", 160, config.modoInteligente, function(v) config.modoInteligente = v end, "Farm")
criarEntrada("Tempo p/ Refor√ßo:", 190, Esperar_Npc, function(v)Esperar_Npc = math.clamp(v, 1, 60)end, "Farm")
criarEntrada("Tempo de esperar:", 220, Esperar_Arena, function(v)Esperar_Arena = math.clamp(v, 1, 60)end, "Farm")
criarCheckbox("Ancorar durante espera", 250, config.ancoragem, function(v)
	config.ancoragem = v
end, "Farm")

criarCheckbox("Voltar Origem", 280, config.voltar_origem, function(v)
	config.voltar_origem = v
end, "Farm")

criarCheckbox("Auto Pulo", 310, config.autojump, function(v)
	config.autojump = v
end, "Farm")



--=====================================================================================================================--
 
-- Controle do proprio personagem Obs: Bom para mods locais.

-- üßç Player Control
local ultimoWalkSpeed = 16
local ultimoJumpPower = 50
local ultimaColisao = true
local ultimoESP = false

-- 1. Velocidade de caminhada
local function setWalkSpeed(valor)
	ultimoWalkSpeed = valor
	local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		humanoid.WalkSpeed = valor
	end
end

local function setJumpPower(valor)
	ultimoJumpPower = valor
	local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		humanoid.JumpPower = valor
	end
end

local function setCollision(ativo)
	ultimaColisao = ativo
	local character = game.Players.LocalPlayer.Character
	if character then
		for _, part in pairs(character:GetDescendants()) do
			if part:IsA("BasePart") then
				part.CanCollide = ativo
			end
		end
	end
end

local function toggleESP(ativo)
	ultimoESP = ativo
	local char = game.Players.LocalPlayer.Character
	if not char then return end

	local highlight = char:FindFirstChild("PlayerHighlight")
	if ativo then
		if not highlight then
			highlight = Instance.new("Highlight")
			highlight.Name = "PlayerHighlight"
			highlight.FillTransparency = 1
			highlight.OutlineColor = Color3.fromRGB(0, 255, 0)
			highlight.OutlineTransparency = 0
			highlight.Parent = char
		end
	else
		if highlight then
			highlight:Destroy()
		end
	end
end

local player = game.Players.LocalPlayer
player.CharacterAdded:Connect(function(char)
	char:WaitForChild("Humanoid")

	task.wait(0.2) -- pequeno delay para garantir que as partes existam

	setWalkSpeed(ultimoWalkSpeed)
	setJumpPower(ultimoJumpPower)
	setCollision(ultimaColisao)
	toggleESP(ultimoESP)
end)



criarEntrada("Velocidade:", 70, 16, setWalkSpeed, "Player")
criarEntrada("Pulo:", 100, 50, setJumpPower, "Player")
criarCheckbox("Colis√£o", 130, true, setCollision, "Player")
criarCheckbox("ESP (Highlight)", 160, false, toggleESP, "Player")
--====================================================================--
-- ‚öôÔ∏è Jogo
criarCheckbox("Som ligado", 70, som, function(v) som = v end, "Jogo")
criarCheckbox("Notifica√ß√µes de Status", 120, notificacoesAtivas, function(v) notificacoesAtivas = v end, "Jogo")



--====================================================================--
-- üöÄ TELEPORTES

-- Atualiza o pontoArena na config
local function atualizarPontoArena(v3)
	config.pontoArena = v3
	print("üìç Novo pontoArena:", v3)
end

-- Entrada para coordenadas do pontoArena
local function criarEntradaCoordenadas(baseY, secao)
	local campos, labelsUI = {}, {}

	local labels = {"X", "Y", "Z"}
	local valores = {config.pontoArena.X, config.pontoArena.Y, config.pontoArena.Z}

	for i = 1, 3 do
		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(0, 20, 0, 20)
		label.Position = UDim2.new(0, 10 + (i-1)*90, 0, baseY)
		label.Text = labels[i]
		label.TextColor3 = Color3.new(1,1,1)
		label.BackgroundTransparency = 1
		label.Font = Enum.Font.Gotham
		label.TextSize = 14
		label.Parent = configFrame
		label.Visible = false
		table.insert(secoes[secao], label)
		table.insert(labelsUI, label)

		local box = Instance.new("TextBox")
		box.Size = UDim2.new(0, 70, 0, 20)
		box.Position = UDim2.new(0, 30 + (i-1)*90, 0, baseY)
		box.Text = tostring(math.floor(valores[i]*100)/100)
		box.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
		box.TextColor3 = Color3.new(1, 1, 1)
		box.Font = Enum.Font.Gotham
		box.TextSize = 14
		box.ClearTextOnFocus = false
		box.Parent = configFrame
		box.Visible = false
		applyCorner(box)

		table.insert(campos, box)
		table.insert(secoes[secao], box)
	end

	local botao = Instance.new("TextButton")
	botao.Size = UDim2.new(0, 120, 0, 20)
	botao.Position = UDim2.new(1, -130, 0, baseY + 25)
	botao.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
	botao.Text = "üìç Usar Local Atual"
	botao.TextColor3 = Color3.new(1,1,1)
	botao.Font = Enum.Font.GothamBold
	botao.TextSize = 13
	botao.Parent = configFrame
	botao.Visible = false
	applyCorner(botao)
	table.insert(secoes[secao], botao)

	-- Atualiza campos com a posi√ß√£o atual do jogador
	botao.MouseButton1Click:Connect(function()
		local pos = hrp.Position
		campos[1].Text = tostring(math.floor(pos.X * 100)/100)
		campos[2].Text = tostring(math.floor(pos.Y * 100)/100)
		campos[3].Text = tostring(math.floor(pos.Z * 100)/100)
		atualizarPontoArena(pos)
	end)

	-- Atualiza o config com novos valores inseridos manualmente
	for i, box in pairs(campos) do
		box.FocusLost:Connect(function()
			local x = tonumber(campos[1].Text) or config.pontoArena.X
			local y = tonumber(campos[2].Text) or config.pontoArena.Y
			local z = tonumber(campos[3].Text) or config.pontoArena.Z
			atualizarPontoArena(Vector3.new(x, y, z))
		end)
	end
end

-- üîÅ Trocar pasta de NPCs com valida√ß√£o segura
local function setPastaNpc(nome)
	local nova = workspace:FindFirstChild(nome)

	if not nova then
		warn("‚ùå Pasta '" .. nome .. "' n√£o encontrada no Workspace. Mantendo a anterior.")
		return
	end

	if not nova:IsA("Folder") then
		warn("‚ö†Ô∏è O objeto '" .. nome .. "' existe, mas n√£o √© uma Folder. Ignorando troca.")
		return
	end

	-- Sucesso
	pastaNpcs = nova
	print("‚úÖ Nova pasta de NPCs definida:", nome)
end

-- Entrada de texto para nome da pasta de NPCs
-- üìÇ Dropdown para escolher pasta de NPCs
-- üìÇ Dropdown com scroll para escolher pasta de NPCs
local function criarDropdownPastaNpc(y, secao)
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(0, 140, 0, 20)
	label.Position = UDim2.new(0, 10, 0, y)
	label.Text = "Pasta de NPCs:"
	label.TextColor3 = Color3.new(1, 1, 1)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = configFrame
	label.Visible = false
	table.insert(secoes[secao], label)

	-- Bot√£o principal do dropdown
	local dropdown = Instance.new("TextButton")
	dropdown.Size = UDim2.new(0, 120, 0, 20)
	dropdown.Position = UDim2.new(1, -130, 0, y)
	dropdown.Text = pastaNpcs and pastaNpcs.Name or "Selecione"
	dropdown.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	dropdown.TextColor3 = Color3.new(1, 1, 1)
	dropdown.Font = Enum.Font.Gotham
	dropdown.TextSize = 14
	dropdown.Parent = configFrame
	dropdown.Visible = false
	applyCorner(dropdown)
	table.insert(secoes[secao], dropdown)

	-- Scroll de op√ß√µes
	local lista = Instance.new("ScrollingFrame")
	lista.Size = UDim2.new(0, 120, 0, 100)
	lista.Position = dropdown.Position + UDim2.new(0, 0, 0, 25)
	lista.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	lista.BorderSizePixel = 0
	lista.Visible = false
	lista.ZIndex = 5
	lista.ClipsDescendants = true
	lista.CanvasSize = UDim2.new(0, 0, 0, 0)
	lista.ScrollBarThickness = 6
	lista.Parent = configFrame
	applyCorner(lista)

	local uilist = Instance.new("UIListLayout")
	uilist.Parent = lista
	uilist.SortOrder = Enum.SortOrder.LayoutOrder

	table.insert(secoes[secao], lista)

	-- Carregar todas as folders do Workspace
	local function atualizarLista()
		for _, child in ipairs(lista:GetChildren()) do
			if child:IsA("TextButton") then
				child:Destroy()
			end
		end

		local count = 0
		for _, obj in pairs(workspace:GetChildren()) do
			if obj:IsA("Folder") then
				count += 1
				local opt = Instance.new("TextButton")
				opt.Size = UDim2.new(1, 0, 0, 20)
				opt.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
				opt.Text = obj.Name
				opt.TextColor3 = Color3.new(1, 1, 1)
				opt.Font = Enum.Font.Gotham
				opt.TextSize = 13
				opt.ZIndex = 5
				opt.Parent = lista

				opt.MouseButton1Click:Connect(function()
					pastaNpcs = obj
					dropdown.Text = obj.Name
					lista.Visible = false
					print("‚úÖ Nova pasta selecionada:", obj.Name)
				end)
			end
		end


		lista.CanvasSize = UDim2.new(0, 0, 0, count * 22)
	end

	-- Mostrar/esconder a lista ao clicar
	dropdown.MouseButton1Click:Connect(function()
		lista.Visible = not lista.Visible
		if lista.Visible then
			atualizarLista()
		end
	end)
end



-- üéØ ADICIONAR ELEMENTOS √Ä SE√á√ÉO TELEPORTES
criarCheckbox("AutoTeleporte", 70, false, function(v)
	autoTeleporteAtivo = v
	print("AutoTP:", v)
end, "Teleportes")

criarEntradaCoordenadas(100, "Teleportes")
criarDropdownPastaNpc(150, "Teleportes")


-- ‚úÖ For√ßar atualiza√ß√£o de visibilidade para esconder os elementos de outras abas
atualizarVisibilidade()


--=======================================================--

-- Bot√£o de fechar configura√ß√µes
local fecharConfigBtn = Instance.new("TextButton")
fecharConfigBtn.Size = UDim2.new(0, 60, 0, 25)
fecharConfigBtn.Position = UDim2.new(1, -70, 1, -35)
fecharConfigBtn.BackgroundColor3 = Color3.fromRGB(100, 30, 30)
fecharConfigBtn.Text = "Fechar"
fecharConfigBtn.TextColor3 = Color3.new(1, 1, 1)
fecharConfigBtn.Font = Enum.Font.GothamBold
fecharConfigBtn.TextSize = 14
fecharConfigBtn.Parent = configFrame
applyCorner(fecharConfigBtn)

-- üìå Eventos dos bot√µes
minimizarBtn.MouseButton1Click:Connect(function()
	frame.Visible = false
	restaurarBtn.Visible = true
end)

restaurarBtn.MouseButton1Click:Connect(function()
	frame.Visible = true
	restaurarBtn.Visible = false
end)

configBtn.MouseButton1Click:Connect(function()
	configFrame.Visible = true
end)

fecharConfigBtn.MouseButton1Click:Connect(function()
	configFrame.Visible = false
end)

--=====================================================================--
-- üîÅ Fun√ß√£o utilit√°ria para teleporte com espera e ancoragem
local function teleporteComEspera(destino, localNome)
	if not destino then
		warn("‚ö†Ô∏è Destino para " .. localNome .. " √© inv√°lido!")
		return nil
	end

	hrp.CFrame = CFrame.new(destino + Vector3.new(0, 3, 0))

	local tempo = tonumber(Esperar_Arena) or 1
	local tempoQueda = config.tempoQueda or 1

	task.wait(tempoQueda)

	if config.ancoragem then
		hrp.Anchored = true
	end

	atualizarStatusComTexto(Color3.fromRGB(255, 200, 0), "‚åõ Esperando " .. tempo .. "s em " .. localNome .. "...")
	task.wait(tempo)

	if config.ancoragem then
		hrp.Anchored = false
	end

	atualizarStatusComTexto(Color3.fromRGB(0, 255, 0), "‚úÖ Espera finalizada em " .. localNome .. "!")

	return hrp
end

-- üéØ Teleporta para a arena
local function teleportarParaArena()
	local destino = autoTeleporteAtivo and config.pontoArena or pontoArena
	return teleporteComEspera(destino, "Arena")
end

-- üè† Teleporta para o spawn
local function teleportarParaSpawn()
	local spawnLocation = plr.RespawnLocation or workspace:FindFirstChild("SpawnLocation")
	if spawnLocation then
		return teleporteComEspera(spawnLocation.Position, "Spawn")
	else
		warn("‚ö†Ô∏è Spawn n√£o encontrado")
	end
end


--===========================================================--
local npcIgnorados = {} -- ou em espera
local npcsAtivos = {} -- seguindo nesse momento

-- Vari√°vel para contar erros consecutivos
local errosSeguidos = 0

-- üîç Checa se o NPC √© v√°lido
local function npcValido(npc)
	return npc:IsA("Model") 
		and npc:FindFirstChild("Humanoid") 
		and npc:FindFirstChild("HumanoidRootPart") 
		and npc.Humanoid.Health > 0
end

-- üîç Busca NPCs dentro de uma faixa e retorna o mais pr√≥ximo
local function encontrarNpc(distMin, distMax, comPrioridade)
	local menorDist = math.huge
	local alvo, total = nil, 0

	for _, npc in pairs(pastaNpcs:GetChildren()) do
		if npcValido(npc) then
			local dist = (hrp.Position - npc.HumanoidRootPart.Position).Magnitude

			if dist >= distMin and dist <= distMax then
				total += 1

				-- üéØ Prioridade se desejar (Boss, Elite, etc)
				if comPrioridade and npc.Name:lower():find("boss") then
					return npc
				end

				if dist < menorDist then
					menorDist = dist
					alvo = npc
				end
			end
		end
	end

	if config.contador then
		print("üë• NPCs encontrados:", total)

		-- Se n√£o encontrar nenhum dentro da faixa, lista NPCs fora da faixa para debug
		if total == 0 then
			for _, npc in pairs(pastaNpcs:GetChildren()) do
				if npcValido(npc) then
					local dist = (hrp.Position - npc.HumanoidRootPart.Position).Magnitude
					print("‚ö†Ô∏è NPC fora da faixa:", npc.Name, "Dist√¢ncia:", math.floor(dist))
				end
			end
		end
	end

	return alvo
end

-- ‚ú® Aplica highlight no alvo (se ativado)
local function aplicarHighlight(alvo)
	for _, npc in pairs(pastaNpcs:GetChildren()) do
		local oldHL = npc:FindFirstChild("AutoFarmHighlight")
		if oldHL then oldHL:Destroy() end
	end

	if config.highlightNPC and alvo then
		local hl = Instance.new("Highlight")
		hl.Name = "AutoFarmHighlight"
		hl.Adornee = alvo
		hl.FillColor = Color3.fromRGB(0, 255, 0)
		hl.OutlineColor = Color3.new(1, 1, 1)
		hl.Parent = alvo
	end
end

-- üéØ Busca o NPC mais pr√≥ximo com base no modo inteligente, ou √∫ltimo NPC v√°lido se nenhum dentro da faixa
local function getNpcMaisProximo()
	local alvo = nil

	if config.modoInteligente then
		alvo = encontrarNpc(config.distanciaMinima, config.distanciaMaxima, true) -- com prioridade
	else
		alvo = encontrarNpc(config.distanciaMinima, config.distanciaMaxima)
	end

	-- Se n√£o achou NPC dentro da faixa, tenta pegar qualquer NPC v√°lido como √∫ltimo recurso
	if not alvo then
		for _, npc in pairs(pastaNpcs:GetChildren()) do
			if npcValido(npc) then
				print("üîª Usando √∫ltimo NPC fora da faixa:", npc.Name)
				alvo = npc
				break
			end
		end
	end

	aplicarHighlight(alvo)
	return alvo
end

-- üö∂ Move at√© o NPC com timeout e follow se ele andar
local function moverAteNpc(npc)
	if not npcValido(npc) then return end

	local alvoPos = npc.HumanoidRootPart.Position
	local tempoMaximo, tempoAtual = 10, 0
	local distanciaChegada, dt = 3, 0.1

	humanoid:MoveTo(alvoPos)

	while tempoAtual < tempoMaximo do
		task.wait(dt)
		tempoAtual += dt

		if not npcValido(npc) then
			print("‚ö†Ô∏è NPC inv√°lido ou morreu.")
			break
		end

		local novaPos = npc.HumanoidRootPart.Position
		local distanciaAtual = (hrp.Position - novaPos).Magnitude

		if distanciaAtual <= distanciaChegada then
			break
		elseif (novaPos - alvoPos).Magnitude > 2 then
			alvoPos = novaPos
			humanoid:MoveTo(alvoPos)
		end
	end

	-- S√≥ interrompe o movimento se NPC morreu ou estiver longe demais do personagem
	if not npcValido(npc) or (hrp.Position - npc.HumanoidRootPart.Position).Magnitude > distanciaChegada * 2 then
		humanoid:MoveTo(hrp.Position)
	end
end

-- üÜò Refor√ßo: busca NPC mais distante em dobro do alcance
local function reforco()
	local alvo = encontrarNpc(config.distanciaMaxima + 1, config.distanciaMaxima * 2)

	if alvo then
		print("üÜò Refor√ßo: NPC distante encontrado:", alvo.Name)
		atualizarStatusComTexto(Color3.fromRGB(0, 200, 255), "Refor√ßo: " .. alvo.Name)
		moverAteNpc(alvo)
		return alvo
	else
		print("‚ùå Refor√ßo falhou: nenhum NPC distante.")
		return nil
	end
end

-- Controle de movimento ativo ou n√£o
local controleMove = true

-- Vari√°vel global para armazenar o alvo atual
local alvoAtual = nil

-- Fun√ß√£o para mover at√© o NPC (somente se controleMove == true)
local function moverAteNpcControlado(npc)
	if not npcValido(npc) then return end

	if not controleMove then
		-- Parar o movimento se controle estiver desativado
		humanoid:MoveTo(hrp.Position)
		return
	end

	local alvoPos = npc.HumanoidRootPart.Position
	local tempoMaximo, tempoAtual = 10, 0
	local distanciaChegada, dt = 3, 0.1

	humanoid:MoveTo(alvoPos)

	while tempoAtual < tempoMaximo do
		task.wait(dt)
		tempoAtual += dt

		if not npcValido(npc) then
			print("‚ö†Ô∏è NPC inv√°lido ou morreu.")
			break
		end

		local novaPos = npc.HumanoidRootPart.Position
		local distanciaAtual = (hrp.Position - novaPos).Magnitude

		if distanciaAtual <= distanciaChegada then
			break
		elseif (novaPos - alvoPos).Magnitude > 2 then
			alvoPos = novaPos
			humanoid:MoveTo(alvoPos)
		end
	end

	if not npcValido(npc) or (hrp.Position - npc.HumanoidRootPart.Position).Magnitude > distanciaChegada * 2 then
		humanoid:MoveTo(hrp.Position)
	end
end

-- Loop separado s√≥ para mover o personagem at√© o alvo atual, se controleMove e autoFarmAtivo estiverem true
spawn(function()
	while task.wait(1) do
		if autoFarmAtivo and controleMove and alvoAtual then
			local sucesso, erro = pcall(function()
				moverAteNpcControlado(alvoAtual)
			end)
			if not sucesso then
				warn("‚ö†Ô∏è Erro ao mover NPC:", erro)
			end
		end
	end
end)



local function monitorar_p_sit()
	local plr = game.Players.LocalPlayer
	local character = plr.Character or plr.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local hrp = character:WaitForChild("HumanoidRootPart")

	-- Monitora se o jogador sentar
	humanoid:GetPropertyChangedSignal("Sit"):Connect(function()
		if humanoid.Sit then
			warn("üö´ Jogador sentou! Removendo estado...")

			-- Op√ß√£o 1: For√ßa o jogador a pular
			humanoid.Jump = true

			-- Op√ß√£o 2: Cancela o estado de sentar (caso voc√™ queira remover sem pulo)
			task.wait(0.1)
			humanoid.Sit = false
		end
	end)
end

if config.autojump then
	monitorar_p_sit()
end



--====================================================================================--

-- Fun√ß√£o principal que controla teleporte, l√≥gica da arena e atualiza√ß√£o do alvoAtual
local function iniciarArena()
	partidaAtiva = true
	local tempoSemNpc = 0

	print("üéØ Indo para a arena...")
	atualizarStatusComTexto(Color3.fromRGB(255, 255, 0), "Indo para a arena...")
	teleportarParaArena()

	local tempo = tonumber(Esperar_Arena) or 1

	print("‚åõ Esperando " .. tempo .. "s para iniciar...")
	atualizarStatusComTexto(Color3.fromRGB(255, 255, 0), "Esperando " .. tempo .. "s para iniciar...")

	-- üîí Garantir que movimento e busca fiquem travados durante o tempo
	controleMove = false
	alvoAtual = nil
	

	atualizarStatusComTexto(Color3.fromRGB(0, 255, 0), "‚úÖ In√≠cio autorizado, buscando NPC...")

	-- Agora inicia a l√≥gica de farm
	while autoFarmAtivo do
		controleMove = false

		local valido = alvoAtual
			and alvoAtual:FindFirstChild("Humanoid")
			and alvoAtual:FindFirstChild("HumanoidRootPart")
			and alvoAtual.Humanoid.Health > 0

		if not valido then
			alvoAtual = getNpcMaisProximo()
		end

		if alvoAtual then
			tempoSemNpc = 0
			atualizarStatusComTexto(Color3.fromRGB(0, 255, 0), "Seguindo: " .. alvoAtual.Name)
			controleMove = true
			task.wait(0.5)
		else
			tempoSemNpc += 1
			atualizarStatusComTexto(Color3.fromRGB(255, 255, 0), "Esperando NPC...")

			if tempoSemNpc >= Esperar_Npc then
				local npcRef = reforco()
				if npcRef then
					alvoAtual = npcRef
					tempoSemNpc = 0
				elseif config.modoInteligente then
					print("ü§ñ Nenhum NPC, ativando modo inteligente.")
					atualizarStatusComTexto(Color3.fromRGB(255, 165, 0), "Sem NPCs. Teleportando para spawn...")

					controleMove = false
					teleportarParaSpawn()
					task.wait(2)

					atualizarStatusComTexto(Color3.fromRGB(255, 165, 0), "Voltando para arena...")
					teleportarParaArena()
					task.wait(2)

					tempoSemNpc = 0
				else
					print("‚ùå Sem NPCs, encerrando arena.")
					break
				end
			end

			task.wait(1)
		end

		task.wait(0.5)
	end

	print("üèÅ Arena finalizada, voltando ao spawn.")
	atualizarStatusComTexto(Color3.fromRGB(255, 255, 0), "Arena finalizada, voltando ao spawn...")

	controleMove = false
	-- Volta para spawn se for True e config.voltar_origem estiver ativo
	if config.voltar_origem then
		teleportarParaSpawn()
		print("‚è≥ Aguardando 10s...")
		atualizarStatusComTexto(Color3.fromRGB(255, 255, 0), "Aguardando 10 segundos...")
		task.wait(10)
	end

	
	partidaAtiva = false
	if autoFarmAtivo then
		task.defer(iniciarArena)
	end
end



-- ‚ñ∂Ô∏è In√≠cio do sistema
local function iniciarSistema()
	task.spawn(function()
		if not autoFarmAtivo then return end
		iniciarArena()
	end)
end


-- ‚¨ÖÔ∏è Bot√£o ativar/desativar
button.MouseButton1Click:Connect(function()
	autoFarmAtivo = not autoFarmAtivo

	if autoFarmAtivo then
		button.Text = "Desativar AutoFarm"
		atualizarStatus(Color3.fromRGB(255, 255, 0)) -- üü°
		iniciarSistema()
	else
		button.Text = "Ativar AutoFarm"
		atualizarStatus(Color3.fromRGB(255, 0, 0)) -- üî¥
		partidaAtiva = false
		humanoid:MoveTo(hrp.Position)
	end
end)

-- üîÅ Fun√ß√£o para monitorar morte e reinicializar vari√°veis ap√≥s respawn
local function monitorarMorte()
	-- Conex√£o segura
	if humanoid and humanoid:IsA("Humanoid") then
		humanoid.Died:Connect(function()
			print("üíÄ Jogador morreu.")
			atualizarStatusComTexto(Color3.fromRGB(170, 0, 255), "Morto. Aguardando respawn...")

			-- Pausar farm e l√≥gica
			partidaAtiva = false

			-- Espera personagem novo e reinicializa vari√°veis essenciais
			plr.CharacterAdded:Wait()
			character = plr.Character or plr.CharacterAdded:Wait()
			humanoid = character:WaitForChild("Humanoid")
			hrp = character:WaitForChild("HumanoidRootPart")

			-- Garantir que outras vari√°veis continuam corretas
			-- Config j√° √© tabela compartilhada, permanece intacta
			-- Reconectar monitor da morte
			monitorarMorte()

			-- Se autofarm ainda est√° ativo, continua
			if autoFarmAtivo then
				print("‚ö° AutoFarm reiniciando ap√≥s morte.")
				atualizarStatusComTexto(Color3.fromRGB(255, 255, 0), "Respawn detectado. Retornando √† arena...")
				task.wait(2)

				if not partidaAtiva then
					iniciarArena()
				end
			else
				atualizarStatusComTexto(Color3.fromRGB(255, 0, 0), "AutoFarm desativado. Aguardando a√ß√£o.")
			end
		end)
	end
end

-- üîÑ Chamar logo ap√≥s inicializar humanoid na primeira vez
monitorarMorte()
--=================================================================--
